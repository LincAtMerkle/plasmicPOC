{"version":3,"file":"react-web.esm.js","sources":["../src/common.ts","../src/react-utils.tsx","../src/render/Stack.tsx","../src/render/elements.ts","../src/render/global-variants.ts","../src/render/PlasmicHead/index.tsx","../src/render/PlasmicIcon.tsx","../src/render/PlasmicImg/index.tsx","../src/render/PlasmicLink.tsx","../src/render/translation.tsx","../src/render/PlasmicSlot.tsx","../src/render/screen-variants.ts","../src/render/ssr.tsx","../src/render/triggers.ts","../src/index-common.tsx","../src/plume/plume-utils.ts","../src/plume/button/index.tsx","../src/plume/props-utils.ts","../src/plume/checkbox/index.tsx","../src/plume/collection-utils.tsx","../src/plume/triggered-overlay/context.tsx","../src/plume/menu/context.tsx","../src/plume/menu/menu.tsx","../src/plume/menu/menu-group.tsx","../src/plume/menu/menu-item.tsx","../src/plume/menu-button/menu-trigger.tsx","../src/plume/menu-button/DropdownMenu.tsx","../src/plume/menu-button/menu-button.tsx","../src/plume/select/context.tsx","../src/plume/select/select.tsx","../src/plume/select/select-option.tsx","../src/plume/select/select-option-group.tsx","../src/plume/switch/index.tsx","../src/plume/text-input/index.tsx","../src/plume/triggered-overlay/triggered-overlay.tsx","../src/states/helpers.ts","../src/states/valtio.tsx"],"sourcesContent":["export function notNil<T>(x: T | undefined | null): x is T {\n  return x != null;\n}\n\nexport function pick<T>(\n  obj: T,\n  ...keys: (string | number | symbol)[]\n): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: any = {};\n  for (const key of keys) {\n    if (key in obj) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function pickBy<T>(\n  obj: T,\n  func: (key: string, val: any) => boolean\n): Partial<T> {\n  const res: any = {};\n  for (const [key, val] of Object.entries(obj)) {\n    if (func(key, val)) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function omit<T>(obj: T, ...keys: (keyof T)[]): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: Partial<T> = {};\n  for (const key of Object.keys(obj) as (keyof T)[]) {\n    if (!keys.includes(key)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\nexport function isSubset<T>(a1: T[], a2: T[]) {\n  return a1.every((x) => a2.includes(x));\n}\n\nexport function chainSingleArgFuncs<A>(...funcs: ((arg: A) => A)[]) {\n  if (funcs.length === 0) {\n    return undefined;\n  }\n  return (arg: A) => {\n    let res: A = arg;\n    for (const func of funcs) {\n      res = func(res);\n    }\n    return res;\n  };\n}\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nexport function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\nexport function groupBy<T>(\n  collection: T[],\n  keyFunc: (x: T) => string\n): Record<string, T[]> {\n  const result: Record<string, T[]> = {};\n  for (const obj of collection) {\n    const key = keyFunc(obj);\n    if (key in result) {\n      result[key].push(obj);\n    } else {\n      result[key] = [obj];\n    }\n  }\n  return result;\n}\n\nexport function mapValues<V, V2>(\n  obj: Record<string, V>,\n  mapper: (value: V) => V2\n): Record<string, V2> {\n  const result: Record<string, V2> = {};\n  for (const key in obj) {\n    result[key] = mapper(obj[key]);\n  }\n  return result;\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport const isBrowser = typeof window !== \"undefined\";\nexport const NONE = Symbol(\"NONE\");\n\nexport const useIsomorphicLayoutEffect = isBrowser\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nexport function createElementWithChildren(\n  elementType: any,\n  props: any,\n  children: React.ReactNode\n) {\n  if (Array.isArray(children)) {\n    return React.createElement(\n      elementType,\n      props,\n      ...children\n    ) as React.ReactElement;\n  } else if (children || \"children\" in props) {\n    // Only call React.createElement with `children` if there are actual children,\n    // or if there was an explicit (albeit undefined) children passed via\n    // props.  Otherwise, if you pass `undefined` as the children argument\n    // to React.createElement, the created element will have prop {children: undefined}.\n    // If the `root` is an PlasmicGeneratedComponent, and these props with {children: undefined}\n    // are used, then it will be taken as a `children` override, and will thus blank out\n    // everything under the root node.\n    return React.createElement(elementType, props, children);\n  } else {\n    return React.createElement(elementType, props);\n  }\n}\n\nexport function ensureNotArray(children: React.ReactNode) {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children[0];\n    } else {\n      return React.createElement(React.Fragment, {}, ...children);\n    }\n  } else {\n    return children;\n  }\n}\n\n/**\n * Flattens ReactNode into an array of ReactChild, but does NOT replace\n * missing keys with array index, as React.Children.toArray() does.\n */\nexport function toChildArray(children: React.ReactNode): React.ReactChild[] {\n  if (isReactChild(children)) {\n    return [children];\n  } else if (Array.isArray(children)) {\n    return children.flatMap(toChildArray);\n  } else {\n    return [];\n  }\n}\n\nexport function isReactText(child: React.ReactNode): child is React.ReactText {\n  return typeof child === \"string\" || typeof child === \"number\";\n}\n\nexport function isReactChild(\n  child: React.ReactNode\n): child is React.ReactChild {\n  return React.isValidElement(child) || isReactText(child);\n}\n\nexport function isReactFragment(\n  child: React.ReactNode\n): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === React.Fragment;\n}\n\nexport function isReactNode(x: any) {\n  return (\n    typeof x === \"string\" || typeof x === \"number\" || React.isValidElement(x)\n  );\n}\n\n// From https://stackoverflow.com/questions/54775790/forcing-excess-property-checking-on-variable-passed-to-typescript-function\n// We also wrap the error message in a Partial<> because otherwise Jetbrains IDEs will autocomplete the component with all the string methods as props - see https://github.com/plasmicapp/plasmic/issues/16.\nexport type StrictProps<T, TExpected> = Exclude<\n  keyof T,\n  keyof TExpected\n> extends never\n  ? {}\n  : Partial<\"Unexpected extraneous props\">;\n\nexport type HTMLElementRefOf<T extends keyof JSX.IntrinsicElements> = Exclude<\n  React.ComponentProps<T>[\"ref\"],\n  string\n>;\n\nexport function mergeProps(\n  props: Record<string, any>,\n  ...restProps: Record<string, any>[]\n): Record<string, any> {\n  if (restProps.every((rest) => Object.keys(rest).length === 0)) {\n    return props;\n  }\n\n  const result = { ...props };\n\n  for (const rest of restProps) {\n    for (const key of Object.keys(rest)) {\n      result[key] = mergePropVals(key, result[key], rest[key]);\n    }\n  }\n\n  return result;\n}\n\nfunction updateRef<T>(ref: React.Ref<T> | undefined, value: T | null) {\n  if (!ref) {\n    return;\n  }\n\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else {\n    if (!Object.isFrozen(ref)) {\n      (ref as React.MutableRefObject<T | null>).current = value;\n    }\n  }\n}\n\nexport function mergeRefs<T>(...refs: (React.Ref<T> | undefined)[]) {\n  return (value: T) => {\n    for (const ref of refs) {\n      updateRef(ref, value);\n    }\n  };\n}\n\nexport function mergePropVals(name: string, val1: any, val2: any): any {\n  if (val1 === NONE || val2 === NONE) {\n    // The NONE sentinel always skips all merging and returns null\n    return null;\n  } else if (val1 == null) {\n    // If either of them is nil, prefer the other\n    return val2;\n  } else if (val2 == null) {\n    return val1;\n  } else if (name === \"className\") {\n    // Special case for className -- always combine both class names\n    return classNames(val1, val2);\n  } else if (name === \"style\") {\n    // Special case for style -- always shallow-merge style dicts\n    return { ...val1, ...val2 };\n  } else if (name === \"ref\") {\n    // Special case for ref\n    return mergeRefs(val1, val2);\n  } else if (typeof val1 !== typeof val2) {\n    // If the type of the two values are different, then no way to merge them.\n    // Prefer val2.\n    return val2;\n  } else if (name.startsWith(\"on\") && typeof val1 === \"function\") {\n    // Special case for event handlers -- always call both handlers\n    return (...args: any[]) => {\n      let res: any;\n      if (typeof val1 === \"function\") {\n        res = val1(...args);\n      }\n      if (typeof val2 === \"function\") {\n        res = val2(...args);\n      }\n      return res;\n    };\n  } else {\n    // For all else, prefer val2\n    return val2;\n  }\n}\n\nexport function getElementTypeName(element: React.ReactElement) {\n  if (typeof element.type === \"string\") {\n    return element.type;\n  } else {\n    const comp = element.type as any;\n    return comp.displayName ?? comp.name ?? comp.render?.name ?? \"Component\";\n  }\n}\n","import * as React from \"react\";\nimport { createElementWithChildren } from \"../react-utils\";\nimport { wrapFlexContainerChildren } from \"./elements\";\n\nfunction renderStack<T extends keyof JSX.IntrinsicElements>(\n  as: T,\n  props: React.ComponentProps<T>,\n  hasGap: boolean | undefined,\n  ref: React.Ref<any>\n) {\n  const { children, ...rest } = props;\n  const wrappedChildren = wrapFlexContainerChildren(children, hasGap ?? false);\n  return createElementWithChildren(as, { ref, ...rest }, wrappedChildren);\n}\n\nfunction FlexStack_<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>,\n  outerRef: React.Ref<any>\n) {\n  const { as, hasGap, ...rest } = props;\n  return renderStack(\n    as ?? \"div\",\n    rest as React.ComponentProps<T>,\n    hasGap,\n    outerRef\n  );\n}\n\nconst FlexStack = React.forwardRef(FlexStack_) as <\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>\n) => React.ReactElement;\n\nconst makeStackImpl = <T extends keyof JSX.IntrinsicElements>(as: T) => {\n  return React.forwardRef(\n    (\n      props: React.ComponentProps<T> & { hasGap?: boolean },\n      ref: React.Ref<any>\n    ) => {\n      const { hasGap, ...rest } = props;\n      return renderStack(as, rest as React.ComponentProps<T>, hasGap, ref);\n    }\n  ) as React.FC<React.ComponentProps<T> & { hasGap?: boolean }>;\n};\n\nexport const Stack = Object.assign(FlexStack, {\n  div: makeStackImpl(\"div\"),\n  a: makeStackImpl(\"a\"),\n  button: makeStackImpl(\"button\"),\n  h1: makeStackImpl(\"h1\"),\n  h2: makeStackImpl(\"h2\"),\n  h3: makeStackImpl(\"h3\"),\n  h4: makeStackImpl(\"h4\"),\n  h5: makeStackImpl(\"h5\"),\n  h6: makeStackImpl(\"h6\"),\n  label: makeStackImpl(\"label\"),\n  form: makeStackImpl(\"form\"),\n  section: makeStackImpl(\"section\"),\n  head: makeStackImpl(\"head\"),\n  main: makeStackImpl(\"main\"),\n  nav: makeStackImpl(\"nav\"),\n});\n","import get from \"dlv\";\nimport * as React from \"react\";\nimport { chainSingleArgFuncs, isSubset, notNil, omit, pick } from \"../common\";\nimport {\n  createElementWithChildren,\n  ensureNotArray,\n  isReactNode,\n  mergeProps,\n  mergePropVals,\n  NONE,\n} from \"../react-utils\";\nimport { $State } from \"../states/valtio\";\nimport { Stack } from \"./Stack\";\n\ninterface Variants {\n  [vg: string]: any;\n}\n\nexport type MultiChoiceArg<M extends string> = M | M[] | { [v in M]?: boolean };\nexport type SingleChoiceArg<M extends string> = M;\nexport type SingleBooleanChoiceArg<M extends string> = M | boolean;\n\ninterface OverrideTwiddle {\n  wrapChildren?: (children: React.ReactNode) => React.ReactNode;\n  wrap?: (node: React.ReactNode) => React.ReactNode;\n}\n\nexport type DefaultOverride<C extends React.ElementType> = {\n  type: \"default\";\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type AsOverride<C extends React.ElementType> = {\n  type: \"as\";\n  as: C;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type RenderOverride<C extends React.ElementType> = {\n  type: \"render\";\n  render: (props: React.ComponentProps<C>, Comp: C) => React.ReactNode;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type Override<DefaultElementType extends React.ElementType> =\n  | DefaultOverride<DefaultElementType>\n  | AsOverride<any>\n  | RenderOverride<DefaultElementType>;\n\nexport type Overrides = Record<string, Flex<any>>;\nexport type Args = Record<string, any>;\n\n// Flex provides a more \"flexible\" way to specify bindings.\nexport type Flex<DefaultElementType extends React.ElementType> =\n  // Fully-specified bindings\n  | (Omit<DefaultOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n      render?: never;\n    })\n  | Omit<AsOverride<any>, \"type\">\n  | (Omit<RenderOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n    })\n\n  // Valid ReactNode, used as children.\n  // Note: We use React.ReactChild instead of React.ReactNode because we don't want to include\n  // React.ReactFragment, which includes {}, which would allow any object to be passed in,\n  // defeating any attempt to type-check!\n  | React.ReactChild\n\n  // Ignored\n  | null\n  | undefined\n\n  // dict of props for the DefaultElementType\n  | (Partial<React.ComponentProps<DefaultElementType>> & {\n      wrap?: never;\n      wrapChildren?: never;\n      props?: never;\n      as?: never;\n      render?: never;\n    })\n\n  // render function taking in dict of props for the DefaultElementType\n  | ((props: React.ComponentProps<DefaultElementType>) => React.ReactNode);\n\nexport function hasVariant<V extends Variants>(\n  variants: V | undefined,\n  groupName: keyof V,\n  variant: string\n) {\n  if (variants == null) {\n    return false;\n  }\n  const groupVariants = variants[groupName];\n  if (groupVariants == null) {\n    return false;\n  } else if (groupVariants === true) {\n    return variant === groupName;\n  } else if (groupVariants === false) {\n    return false;\n  } else if (Array.isArray(groupVariants)) {\n    return groupVariants.includes(variant);\n  } else if (typeof groupVariants === \"string\") {\n    return groupVariants === variant;\n  } else {\n    return (\n      groupVariants[variant] !== undefined && groupVariants[variant] !== false\n    );\n  }\n}\n\nexport function wrapFlexContainerChildren(\n  children: React.ReactNode,\n  hasGap: boolean\n) {\n  // We need to always wrap the children, even if there are no gaps, because\n  // otherwise if we toggle between with and without gap, React reconciliation\n  // will blow away the children tree and all state if we switch from having\n  // a wrapper and not.\n  const className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\n  if (!children) {\n    return null;\n  } else if (Array.isArray(children)) {\n    return React.createElement(\"div\", { className }, ...children);\n  } else {\n    return React.createElement(\"div\", { className }, children);\n  }\n}\n\nfunction createPlasmicElement<DefaultElementType extends React.ElementType>(\n  override: Flex<DefaultElementType>,\n  defaultRoot: DefaultElementType,\n  defaultProps: Partial<React.ComponentProps<DefaultElementType>>,\n  wrapChildrenInFlex?: boolean\n): React.ReactNode | null {\n  if (!override || Object.keys(override).length === 0) {\n    return createElementWithChildren(\n      defaultRoot,\n      defaultProps,\n      defaultProps.children\n    );\n  }\n  const override2 = deriveOverride(override);\n  const props = mergeOverrideProps(defaultProps, override2.props);\n  if (override2.type === \"render\") {\n    return override2.render(\n      props as React.ComponentProps<DefaultElementType>,\n      defaultRoot\n    );\n  }\n\n  let root = defaultRoot;\n  if (override2.type === \"as\" && override2.as) {\n    if (defaultRoot === (Stack as React.ElementType)) {\n      // If there was an \"as\" override specified, but the default type is\n      // a Stack, then we don't want to switch to using \"as\" as the root,\n      // because then we'd lose the flex wrapper that Stack provides.\n      // Instead, we specify the \"as\" as the \"as\" prop to Stack.\n      props.as = override2.as;\n    } else {\n      root = override2.as;\n    }\n  }\n\n  let children = props.children;\n\n  if (override2.wrapChildren) {\n    children = override2.wrapChildren(ensureNotArray(children));\n  }\n\n  if (wrapChildrenInFlex) {\n    // For legacy, we still support data-plasmic-wrap-flex-children\n    children = wrapFlexContainerChildren(children, true);\n  }\n\n  let result = createElementWithChildren(root, props, children);\n\n  if (override2.wrap) {\n    result = override2.wrap(result) as React.ReactElement;\n  }\n\n  return result;\n}\n\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\n// for more info.\nconst seenElements = new Map<string, React.ReactNode>();\nexport function createPlasmicElementProxy<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  // We use seenElements to keep track of elements that has been rendered by\n  // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\n  // is invoked from the leaf to the root as the last call.  So we can store\n  // all the elements we've created until we encounter the leaf, at which point\n  // we will clear this map.  We are guaranteed that this map will only contain\n  // elements from one Plasmic* component at a time, because we're just creating\n  // elements and not \"rendering\" at this point; even if this JSX tree references\n  // other Plasmic* elements, we'll just create an element referencing that component,\n  // rather than following into the content of that component.\n  //\n  // TODO: is this ConcurrentMode friendly?\n\n  if (props == null) {\n    props = {};\n  }\n\n  const name = props[\"data-plasmic-name\"];\n  const isRoot = props[\"data-plasmic-root\"];\n  const forNodeName = props[\"data-plasmic-for-node\"];\n\n  delete props[\"data-plasmic-name\"];\n  delete props[\"data-plasmic-root\"];\n  delete props[\"data-plasmic-for-node\"];\n\n  const element = createPlasmicElementFromJsx(\n    defaultElement,\n    props,\n    ...children\n  );\n  if (name) {\n    seenElements.set(name, element);\n  }\n\n  if (isRoot) {\n    // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\n    // then return that node instead\n    const forNode = forNodeName\n      ? seenElements.get(forNodeName) ?? null\n      : element;\n\n    // Clear out the seenElements map, as we're done rendering this Plasmic* component.\n    seenElements.clear();\n    return forNode;\n  }\n  return element;\n}\n\nfunction createPlasmicElementFromJsx<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  const override = props[\"data-plasmic-override\"];\n  const wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\n  const triggerProps = (props[\"data-plasmic-trigger-props\"] ??\n    []) as React.HTMLAttributes<HTMLElement>[];\n  delete props[\"data-plasmic-override\"];\n  delete props[\"data-plasmic-wrap-flex-child\"];\n  delete props[\"data-plasmic-trigger-props\"];\n  return createPlasmicElement(\n    override,\n    defaultElement,\n    mergeProps(\n      props,\n      children.length === 0\n        ? {}\n        : { children: children.length === 1 ? children[0] : children },\n      ...triggerProps\n    ) as any,\n    wrapFlexChild\n  );\n}\n\nexport function makeFragment(...children: React.ReactNode[]) {\n  return React.createElement(React.Fragment, {}, ...children);\n}\n\nexport const UNSET = Symbol(\"UNSET\");\n\nfunction mergeOverrideProps(\n  defaults: Record<string, any>,\n  overrides?: Record<string, any>\n): Record<string, any> {\n  if (!overrides) {\n    return defaults;\n  }\n\n  const result = { ...defaults };\n\n  for (const key of Object.keys(overrides)) {\n    const defaultVal = defaults[key];\n    let overrideVal = overrides[key];\n    if (overrideVal === UNSET) {\n      delete result[key];\n    } else {\n      // We use the NONE sentinel if the overrideVal is nil, and is not one of the\n      // props that we merge by default -- which are className, style, and\n      // event handlers.  This means for all other \"normal\" props -- like children,\n      // title, etc -- a nil value will unset the default.\n      if (\n        overrideVal == null &&\n        key !== \"className\" &&\n        key !== \"style\" &&\n        !(key.startsWith(\"on\") && typeof defaultVal === \"function\")\n      ) {\n        overrideVal = NONE;\n      }\n      result[key] = mergePropVals(key, defaultVal, overrideVal);\n    }\n  }\n\n  return result;\n}\n\nexport function wrapWithClassName(element: React.ReactNode, className: string) {\n  const key = React.isValidElement(element)\n    ? element.key || undefined\n    : undefined;\n  return React.createElement(\n    \"div\",\n    {\n      key,\n      className,\n      style: {\n        display: \"grid\",\n      },\n    },\n    element\n  );\n}\n\nfunction deriveOverride<C extends React.ElementType>(x: Flex<C>): Override<C> {\n  if (!x) {\n    // undefined Binding is an empty Binding\n    return {\n      type: \"default\",\n      props: {} as any,\n    };\n  } else if (isReactNode(x)) {\n    // If ReactNode, then assume this is the children\n    return {\n      type: \"default\",\n      props: {\n        children: x,\n      } as any,\n    };\n  } else if (typeof x === \"object\") {\n    // If any of the overrideKeys is a key of this object, then assume\n    // this is a full Override\n    if (\"as\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"as\",\n      } as any;\n    } else if (\"render\" in x) {\n      return {\n        ...x,\n        type: \"render\",\n      } as any;\n    } else if (\"props\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"default\",\n      };\n    } else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\n      // Only twiddling functions present, so assume no props overrides\n      // (otherwise we'd assume these were props).\n      return {\n        ...x,\n        props: {},\n        type: \"default\",\n      };\n    }\n\n    // Else, assume this is just a props object.\n    return {\n      type: \"default\",\n      props: x as any,\n    };\n  } else if (typeof x === \"function\") {\n    return {\n      type: \"render\",\n      render: x,\n    };\n  }\n\n  throw new Error(`Unexpected override: ${x}`);\n}\n\nfunction mergeVariants<V extends Variants>(\n  v1: Partial<V> | undefined,\n  v2: Partial<V> | undefined\n): Partial<V> {\n  if (!v1 || !v2) {\n    return v1 || v2 || {};\n  }\n  return { ...v1, ...v2 };\n}\n\nexport function mergeVariantsWithStates(\n  variants: Variants,\n  $state: $State,\n  linkedStates: {\n    variantGroup: string;\n    statePath: (string | number)[];\n  }[]\n): Variants {\n  return {\n    ...variants,\n    ...Object.fromEntries(\n      linkedStates.map(({ variantGroup, statePath }) => [\n        variantGroup,\n        get($state, statePath),\n      ])\n    ),\n  };\n}\n\nfunction mergeArgs<A extends Args>(\n  a1: Partial<A> | undefined,\n  a2: Partial<A> | undefined\n): Partial<A> {\n  if (!a1 || !a2) {\n    return a1 || a2 || {};\n  }\n  return { ...a1, ...a2 };\n}\n\nfunction mergeFlexOverrides<O extends Overrides>(\n  o1: Partial<O>,\n  o2: Partial<O> | undefined\n): Partial<O> {\n  if (!o2) {\n    return o1;\n  }\n  const keys = Array.from(new Set([...Object.keys(o1), ...Object.keys(o2)]));\n  const merged: Record<string, any> = {};\n  for (const key of keys) {\n    merged[key] = mergeFlexOverride(o1[key], o2[key]);\n  }\n  return merged as Partial<O>;\n}\n\nfunction mergeFlexOverride<C extends React.ElementType<any>>(\n  fo1: Flex<C> | undefined,\n  fo2: Flex<C> | undefined\n): Flex<C> | undefined {\n  if (!fo1) {\n    return fo2;\n  }\n  if (!fo2) {\n    return fo1;\n  }\n\n  const o1 = deriveOverride(fo1);\n  const o2 = deriveOverride(fo2);\n  const wrap = chainSingleArgFuncs(...[o1.wrap, o2.wrap].filter(notNil));\n  const wrapChildren = chainSingleArgFuncs(\n    ...[o1.wrapChildren, o2.wrapChildren].filter(notNil)\n  );\n\n  // \"render\" type always takes precedence, but we still merge the props\n  const props = mergeOverrideProps(o1.props ?? {}, o2.props) as Partial<\n    React.ComponentProps<C>\n  >;\n  if (o2.type === \"render\") {\n    return {\n      render: o2.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  if (o1.type === \"render\") {\n    return {\n      render: o1.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  // \"as\" will take precedence\n  const as =\n    (o2.type === \"as\" ? o2.as : undefined) ??\n    (o1.type === \"as\" ? o1.as : undefined);\n\n  return {\n    props,\n    wrap,\n    wrapChildren,\n    ...(as ? { as } : {}),\n  };\n}\n\nexport function deriveRenderOpts(\n  props: Record<string, any>,\n  config: {\n    name: string;\n    descendantNames: string[];\n    internalVariantPropNames: string[];\n    internalArgPropNames: string[];\n  }\n) {\n  const {\n    name,\n    descendantNames,\n    internalVariantPropNames,\n    internalArgPropNames,\n  } = config;\n  const reservedPropNames = [\"variants\", \"args\", \"overrides\"];\n  const variants = mergeVariants(\n    omit(pick(props, ...internalVariantPropNames), ...reservedPropNames),\n    props.variants\n  );\n  const args = mergeArgs(\n    omit(pick(props, ...internalArgPropNames), ...reservedPropNames),\n    props.args\n  );\n  let overrides = mergeFlexOverrides(\n    omit(\n      pick(props, ...descendantNames),\n      ...internalArgPropNames,\n      ...internalVariantPropNames,\n      ...reservedPropNames\n    ),\n    props.overrides\n  );\n\n  const leftoverProps = omit(\n    props,\n    \"variants\",\n    \"args\",\n    \"overrides\",\n    ...descendantNames,\n    ...internalVariantPropNames,\n    ...internalArgPropNames\n  ) as Partial<React.ComponentProps<\"button\">>;\n\n  if (Object.keys(leftoverProps).length > 0) {\n    overrides = mergeFlexOverrides(overrides, {\n      [name]: {\n        props: leftoverProps,\n      },\n    });\n  }\n  return { variants, args, overrides };\n}\n","const isDefaultValue = (val: string) => val === \"PLEASE_RENDER_INSIDE_PROVIDER\";\nconst seenDefaultVariants: Record<string, boolean> = {};\nexport function ensureGlobalVariants<T extends Record<string, any>>(\n  globalVariantValues: T\n) {\n  Object.entries(globalVariantValues)\n    .filter(([_, value]) => isDefaultValue(value))\n    .forEach(([key, _]) => {\n      (globalVariantValues as any)[key] = undefined;\n\n      if (!seenDefaultVariants[key] && process.env.NODE_ENV === \"development\") {\n        seenDefaultVariants[key] = true;\n        const providerName = `${key[0].toUpperCase()}${key.substring(\n          1\n        )}Context.Provider`;\n        console.warn(\n          `Plasmic context value for global variant \"${key}\" was not provided; please use ${providerName} at the root of your React app. Learn More: https://www.plasmic.app/learn/other-assets/#global-variants`\n        );\n      }\n    });\n  return globalVariantValues;\n}\n","import * as React from \"react\";\n\nexport const PlasmicHeadContext = React.createContext<\n  React.ComponentType<any> | undefined\n>(undefined);\n\ntype PlasmicHeadProps = {\n  title?: string;\n  description?: string;\n  image?: string;\n  canonical?: string;\n};\n\nexport function PlasmicHead(props: PlasmicHeadProps) {\n  const Head = React.useContext(PlasmicHeadContext);\n  if (!Head) {\n    console.warn(\n      `Plasmic: Head meta tags are being ignored. To make them work, pass a Head component into PlasmicRootProvider.`\n    );\n    // TODO: Link to doc about Head.\n    return null;\n  }\n\n  // Helmet does not support React.Fragments, so we need to use `[<meta />,\n  // <meta />]` instead of `<><meta /><meta /></>`.\n  return (\n    <Head>\n      {props.image ? (\n        [\n          <meta\n            key=\"twitter:card\"\n            name=\"twitter:card\"\n            content=\"summary_large_image\"\n          />,\n          <meta key=\"og:image\" property=\"og:image\" content={props.image} />,\n          <meta\n            key=\"twitter:image\"\n            name=\"twitter:image\"\n            content={props.image}\n          />,\n        ]\n      ) : (\n        <meta key=\"twitter:card\" name=\"twitter:card\" content=\"summary\" />\n      )}\n      {props.title && [\n        <title key=\"title\">{props.title}</title>,\n        <meta key=\"og:title\" property=\"og:title\" content={props.title} />,\n        <meta\n          key=\"twitter:title\"\n          property=\"twitter:title\"\n          content={props.title}\n        />,\n      ]}\n      {props.description && [\n        <meta\n          key=\"description\"\n          name=\"description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"og:description\"\n          property=\"og:description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"twitter:description\"\n          name=\"twitter:description\"\n          content={props.description}\n        />,\n      ]}\n      {props.canonical && (\n        <link key=\"canonical\" ref=\"canonical\" href={props.canonical} />\n      )}\n    </Head>\n  );\n}\n\nexport const plasmicHeadMeta = {\n  name: \"hostless-plasmic-head\",\n  displayName: \"Head\",\n  description: \"Used to add page metadata to HTML <head />.\",\n  importName: \"PlasmicHead\",\n  importPath: \"@plasmicapp/react-web\",\n  isRepeatable: false,\n  styleSections: false,\n  props: {\n    title: {\n      type: \"string\",\n      displayName: \"Title\",\n    },\n    description: {\n      type: \"string\",\n      displayName: \"Description\",\n    },\n    image: {\n      type: \"imageUrl\",\n      displayName: \"Image\",\n    },\n    canonical: {\n      type: \"string\",\n      displayName: \"Canonical URL\",\n    },\n  },\n};\n","import * as React from \"react\";\n\nexport function PlasmicIcon(\n  props: React.ComponentProps<\"svg\"> & {\n    PlasmicIconType: React.ComponentType;\n  }\n) {\n  const { PlasmicIconType, ...rest } = props;\n  return <PlasmicIconType {...rest} />;\n}\n","/**\n * Responsive `<img/>` replacement, based on `next/image`\n */\n\nimport classNames from \"classnames\";\nimport React, { CSSProperties } from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeRefs } from \"../../react-utils\";\n\nexport interface ImageLoader {\n  supportsUrl: (url: string) => boolean;\n  transformUrl: (opts: {\n    src: string;\n    width?: number;\n    quality?: number;\n    format?: \"webp\";\n  }) => string;\n}\n\ntype ImgTagProps = Omit<\n  React.ComponentProps<\"img\">,\n  \"src\" | \"srcSet\" | \"ref\" | \"style\"\n>;\n\n// Default image sizes to snap to\n// TODO: make this configurable?\nconst IMG_SIZES = [16, 32, 48, 64, 96, 128, 256, 384];\nconst DEVICE_SIZES = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\nconst ALL_SIZES = [...IMG_SIZES, ...DEVICE_SIZES];\n\nexport interface PlasmicImgProps extends ImgTagProps {\n  /**\n   * Either an object with the src string, and its full width and height,\n   * or just a src string with unknown intrinsic dimensions.\n   */\n  src?:\n    | string\n    | {\n        src:\n          | string\n          | {\n              src: string;\n              height: number;\n              width: number;\n              blurDataURL?: string;\n            };\n        fullHeight: number;\n        fullWidth: number;\n        // We might also get a more precise aspectRatio for SVGs\n        // instead of relyiing on fullWidth / fullHeight, because\n        // those values might be rounded and not so accurate.\n        aspectRatio?: number;\n      };\n\n  /**\n   * className applied to the wrapper element if one is used.\n   */\n  className?: string;\n\n  /**\n   * css width\n   */\n  displayWidth?: number | string;\n\n  /**\n   * css height\n   */\n  displayHeight?: number | string;\n\n  /**\n   * css min-width\n   */\n  displayMinWidth?: number | string;\n\n  /**\n   * css min-height\n   */\n  displayMinHeight?: number | string;\n\n  /**\n   * css max-width\n   */\n  displayMaxWidth?: number | string;\n\n  /**\n   * css max-height\n   */\n  displayMaxHeight?: number | string;\n\n  /**\n   * For variable quality formats like jpg, the quality from 0 to 100\n   */\n  quality?: number;\n\n  /**\n   * ImageLoader to use for loading different dimensions of the image.\n   * If none specified, will not attempt to load different dimensions.\n   */\n  loader?: \"plasmic\" | ImageLoader;\n\n  /**\n   * Style applied to the wrapper element. objectFit and objectPosition\n   * rules are applied to the img element.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Ref for the img element.  The normal <PlasmicImg ref={...} />\n   * prop gives the root element instead, which may be the img element\n   * or a wrapper element\n   */\n  imgRef?: React.Ref<HTMLImageElement>;\n}\n\nexport const PlasmicImg = React.forwardRef(function PlasmicImg(\n  props: PlasmicImgProps,\n  outerRef: React.Ref<HTMLElement>\n) {\n  let {\n    src,\n    className,\n    displayWidth,\n    displayHeight,\n    displayMinWidth,\n    displayMinHeight,\n    displayMaxWidth,\n    displayMaxHeight,\n    quality,\n    loader,\n    imgRef,\n    style,\n    loading,\n    ...rest\n  } = props;\n\n  const imgProps = Object.assign({}, rest, {\n    // Default loading to \"lazy\" if not specified (which is different from the\n    // html img, which defaults to eager!)\n    loading: loading ?? \"lazy\",\n  });\n\n  const { fullWidth, fullHeight, aspectRatio } =\n    typeof src === \"string\" || !src\n      ? { fullWidth: undefined, fullHeight: undefined, aspectRatio: undefined }\n      : src;\n  const srcStr = src\n    ? typeof src === \"string\"\n      ? src\n      : typeof src.src === \"string\"\n      ? src.src\n      : src.src.src\n    : \"\";\n\n  // Assume external image if either dimension is null and use usual <img>\n  if (fullHeight == null || fullWidth == null) {\n    return (\n      <img\n        src={srcStr}\n        className={className}\n        style={style}\n        {...imgProps}\n        loading={loading}\n        ref={mergeRefs(imgRef, outerRef) as any}\n      />\n    );\n  }\n\n  if (\n    isSvg(srcStr) &&\n    (displayHeight == null || displayHeight === \"auto\") &&\n    (displayWidth == null || displayWidth === \"auto\")\n  ) {\n    displayWidth = \"100%\";\n  }\n\n  let computedDisplayWidth = displayWidth;\n  if (\n    fullWidth &&\n    fullHeight &&\n    (!displayWidth || displayWidth === \"auto\") &&\n    !!getPixelLength(displayHeight)\n  ) {\n    // If there's a pixel length specified for displayHeight but not displayWidth,\n    // then we can derive the pixel length for displayWidth.  Having an explicit\n    // displayWidth makes this a fixed-size image, which makes it possible for us to\n    // generate better markup!\n    if (!isSvg(srcStr)) {\n      // We shouldn't do it for SVGs though, because `fullWidth` and\n      // `fullHeight` might have rounded values so the final\n      // `displayWidth` could differ by 1px or so.\n      computedDisplayWidth =\n        (getPixelLength(displayHeight)! * fullWidth) / fullHeight;\n    }\n  }\n\n  let spacerWidth = fullWidth;\n  let spacerHeight = fullHeight;\n  if (aspectRatio && isFinite(aspectRatio) && isSvg(srcStr)) {\n    // For SVGs, fullWidth and fullHeight can be rounded values, which would\n    // cause some discrepancy between the actual aspect ratio and the aspect\n    // ratio from those values. So, for those cases, we set large width / height\n    // values to get a more precise ratio from the spacer.\n    spacerWidth = DEFAULT_SVG_WIDTH;\n    spacerHeight = Math.round(spacerWidth / aspectRatio);\n  }\n\n  const { sizes, widthDescs } = getWidths(computedDisplayWidth, fullWidth, {\n    minWidth: displayMinWidth,\n  });\n  const imageLoader = getImageLoader(loader);\n  const spacerSvg = `<svg width=\"${spacerWidth}\" height=\"${spacerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`;\n  const spacerSvgBase64 =\n    typeof window === \"undefined\"\n      ? Buffer.from(spacerSvg).toString(\"base64\")\n      : window.btoa(spacerSvg);\n\n  let wrapperStyle: CSSProperties = { ...(style || {}) };\n  let spacerStyle: CSSProperties = {\n    ...pick(style || {}, \"objectFit\", \"objectPosition\"),\n  };\n\n  if (displayWidth != null && displayWidth !== \"auto\") {\n    // If width is set, set it on the wrapper along with min/max width\n    // and just use `width: 100%` on the spacer\n    spacerStyle.width = \"100%\";\n    // Rely on the styles set by `classname` on the wrapper:\n    // wrapperStyle.width = displayWidth;\n    // wrapperStyle.minWidth = displayMinWidth;\n    // wrapperStyle.maxWidth = displayMaxWidth;\n  } else {\n    // Otherwise, we want auto sizing from the spacer, so set width there.\n    //\n    // But if we have min/max width, it should be set in the wrapper and it\n    // can be percentage values (and we add corresponding min/max width to\n    // 100% in the spacer). In general it ends up with the correct effect,\n    // but some edge cases might make `min-width: 100%` shrink the image more\n    // than it should.\n    spacerStyle.width = displayWidth;\n    wrapperStyle.width = \"auto\";\n    if (displayMinWidth) {\n      spacerStyle.minWidth = \"100%\";\n      // Rely on min-width set by `classname` on the wrapper:\n      // wrapperStyle.minWidth = displayMinWidth;\n    }\n    if (displayMaxWidth != null && displayMaxWidth !== \"none\") {\n      spacerStyle.maxWidth = \"100%\";\n      // Rely on max-width set by `classname` on the wrapper:\n      // wrapperStyle.maxWidth = displayMaxWidth;\n    }\n  }\n\n  if (displayHeight != null && displayHeight !== \"auto\") {\n    spacerStyle.height = \"100%\";\n    // wrapperStyle.height = displayHeight;\n    // wrapperStyle.minHeight = displayMinHeight;\n    // wrapperStyle.maxHeight = displayMaxHeight;\n  } else {\n    spacerStyle.height = displayHeight;\n    wrapperStyle.height = \"auto\";\n    if (displayMinHeight) {\n      spacerStyle.minHeight = \"100%\";\n      // wrapperStyle.minHeight = displayMinHeight;\n    }\n    if (displayMaxHeight != null && displayMaxHeight !== \"none\") {\n      spacerStyle.maxHeight = \"100%\";\n      // wrapperStyle.maxHeight = displayMaxHeight;\n    }\n  }\n\n  return (\n    <div\n      className={classNames(className, \"__wab_img-wrapper\")}\n      ref={outerRef as any}\n      style={wrapperStyle}\n    >\n      <img\n        alt=\"\"\n        aria-hidden\n        className=\"__wab_img-spacer-svg\"\n        src={`data:image/svg+xml;base64,${spacerSvgBase64}`}\n        style={spacerStyle}\n      />\n      {makePicture({\n        imageLoader,\n        widthDescs,\n        sizes,\n        src: srcStr,\n        quality,\n        ref: imgRef,\n        style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined,\n        imgProps,\n        className: \"__wab_img\",\n      })}\n    </div>\n  );\n});\n\nfunction makePicture(opts: {\n  imageLoader?: ImageLoader;\n  widthDescs: WidthDesc[];\n  sizes?: string;\n  src: string;\n  quality?: number;\n  style?: React.CSSProperties;\n  className?: string;\n  imgProps: ImgTagProps;\n  ref?: React.Ref<HTMLImageElement>;\n}) {\n  // If imageLoader is undefined, then this renders to just a normal\n  // <img />.  Else it will render to a <picture> with a <source> for\n  // webp, and srcSet/sizes set according to width requirements.\n  const {\n    imageLoader,\n    widthDescs,\n    src,\n    quality,\n    style,\n    className,\n    sizes,\n    imgProps,\n    ref,\n  } = opts;\n  return (\n    <picture className=\"__wab_picture\">\n      {imageLoader && imageLoader.supportsUrl(src) && (\n        <source\n          type=\"image/webp\"\n          srcSet={widthDescs\n            .map(\n              (wd) =>\n                `${imageLoader.transformUrl({\n                  src,\n                  quality,\n                  width: wd.width,\n                  format: \"webp\",\n                })} ${wd.desc}`\n            )\n            .join(\", \")}\n        />\n      )}\n      <img\n        {...imgProps}\n        ref={ref}\n        className={className}\n        decoding=\"async\"\n        src={\n          imageLoader && imageLoader.supportsUrl(src)\n            ? imageLoader.transformUrl({\n                src,\n                quality,\n                width: widthDescs[widthDescs.length - 1].width,\n              })\n            : src\n        }\n        srcSet={\n          imageLoader && imageLoader.supportsUrl(src)\n            ? widthDescs\n                .map(\n                  (wd) =>\n                    `${imageLoader.transformUrl({\n                      src,\n                      quality,\n                      width: wd.width,\n                    })} ${wd.desc}`\n                )\n                .join(\", \")\n            : undefined\n        }\n        sizes={imageLoader && imageLoader.supportsUrl(src) ? sizes : undefined}\n        style={{\n          ...(style ? pick(style, \"objectFit\", \"objectPosition\") : {}),\n          width: 0,\n          height: 0,\n        }}\n      />\n    </picture>\n  );\n}\n\nconst DEFAULT_SVG_WIDTH = 10000;\n\nfunction isSvg(src: string) {\n  return src.endsWith(\".svg\") || src.startsWith(\"data:image/svg\");\n}\n\ninterface WidthDesc {\n  width?: number;\n  desc: string;\n}\n\nfunction getClosestPresetSize(width: number, fullWidth: number) {\n  const nextBiggerIndex =\n    ALL_SIZES.findIndex((w) => w >= width) ?? ALL_SIZES.length - 1;\n  const nextBigger = ALL_SIZES[nextBiggerIndex];\n  if (nextBigger >= fullWidth) {\n    // If the requested width is larger than the fullWidth,\n    // we just use the original width instead. It's impossible\n    // to make an image bigger than fullWidth!\n    return undefined;\n  } else if (\n    nextBiggerIndex + 1 < ALL_SIZES.length &&\n    fullWidth <= ALL_SIZES[nextBiggerIndex + 1]\n  ) {\n    // If the fullWidth is just between nextBigger and the one after that,\n    // then also might as well just use the original size (so, width is 30,\n    // nextBigger is 32, then we just use the original as long as fullWidth is\n    // less than 48)\n    return undefined;\n  }\n\n  return nextBigger;\n}\n\n/**\n * Computes the appropriate srcSet and sizes to use\n */\nfunction getWidths(\n  width: number | string | undefined,\n  fullWidth: number,\n  extra?: { minWidth: string | number | undefined }\n): { sizes: string | undefined; widthDescs: WidthDesc[] } {\n  const minWidth = extra?.minWidth;\n  const pixelWidth = getPixelLength(width);\n  const pixelMinWidth = getPixelLength(minWidth);\n  if (pixelWidth != null && (!minWidth || pixelMinWidth != null)) {\n    // If there's an exact width, then we just need to display it at 1x and 2x density\n    return {\n      widthDescs: [\n        {\n          width: getClosestPresetSize(\n            Math.max(pixelWidth, pixelMinWidth ?? 0),\n            fullWidth\n          ),\n          desc: \"1x\",\n        },\n        {\n          width: getClosestPresetSize(\n            Math.max(pixelWidth, pixelMinWidth ?? 0) * 2,\n            fullWidth\n          ),\n          desc: \"2x\",\n        },\n      ],\n      sizes: undefined,\n    };\n  }\n  // Otherwise we don't know what sizes we'll end up, so we just cap it at\n  // device width.  TODO: do better!\n  const usefulSizes = DEVICE_SIZES.filter(\n    (size) => !fullWidth || size < fullWidth\n  );\n  if (!!fullWidth && usefulSizes.length === 0) {\n    // image fullWidth is smaller than all device sizes.  So all we can do\n    // is offer 1x\n    return {\n      widthDescs: [\n        {\n          width: getClosestPresetSize(fullWidth, fullWidth),\n          desc: \"1x\",\n        },\n      ],\n      sizes: undefined,\n    };\n  }\n  return {\n    widthDescs: usefulSizes.map((size) => ({\n      width: getClosestPresetSize(size, fullWidth),\n      // If this is the last (buggest) useful width, but it is\n      // still within the bounds set by DEVICE_SIZES, then just\n      // use the original, unresized image.  This means if we match\n      // the largest size, we use unresized and best quality image.\n      // We only do this, though, if fullWidth is \"reasonable\" --\n      // smaller than the largest size we would consider.\n      // i === usefulSizes.length - 1 &&\n      // fullWidth < DEVICE_SIZES[DEVICE_SIZES.length - 1]\n      //   ? undefined\n      //   : size,\n      desc: `${size}w`,\n    })),\n    sizes: \"100vw\",\n  };\n}\n\nfunction getPixelLength(length: number | string | undefined) {\n  if (length == null || length == \"\") {\n    return undefined;\n  }\n\n  if (typeof length === \"number\") {\n    return length;\n  }\n\n  const parsed = parseNumeric(length);\n  if (parsed && (!parsed.units || parsed.units === \"px\")) {\n    return parsed.num;\n  }\n\n  return undefined;\n}\n\nfunction parseNumeric(val: string) {\n  // Parse strings like \"30\", \"30px\", \"30%\", \"30px /* blah blah */\"\n  const res = val.match(\n    /^\\s*(-?(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+))\\s*([a-z]*|%)\\s*(?:\\/\\*.*)?$/i\n  );\n  if (res == null) {\n    return undefined;\n  }\n  const num = res[1];\n  const units = res[2];\n  return { num: +num, units };\n}\n\nfunction getImageLoader(loader: \"plasmic\" | ImageLoader | undefined) {\n  if (loader == null) {\n    return undefined;\n  } else if (loader === \"plasmic\") {\n    return PLASMIC_IMAGE_LOADER;\n  } else {\n    return loader;\n  }\n}\n\nconst PLASMIC_IMAGE_LOADER: ImageLoader = {\n  supportsUrl: (src) => {\n    return src.startsWith(\"https://img.plasmic.app\") && !isSvg(src);\n  },\n  transformUrl: (opts) => {\n    const params = [\n      opts.width ? `w=${opts.width}` : undefined,\n      `q=${opts.quality ?? 75}`,\n      opts.format ? `f=${opts.format}` : undefined,\n    ].filter((x) => !!x);\n    return `${opts.src}?${params.join(\"&\")}`;\n  },\n};\n","import React from \"react\";\nimport { omit, pick } from \"../common\";\n\nexport const PlasmicLink = React.forwardRef(function PlasmicLink(\n  props: any,\n  ref: React.Ref<any>\n) {\n  // props.href is required for nextjs; if no props.href,\n  // then we just render the default anchor element\n  if (props.platform === \"nextjs\" && props.href) {\n    const nextjsProps = [\n      \"href\",\n      \"replace\",\n      \"scroll\",\n      \"shallow\",\n      \"passHref\",\n      \"prefetch\",\n      \"locale\",\n    ];\n\n    return React.createElement(\n      props.component,\n      pick(props, ...nextjsProps),\n      <a {...omit(props, \"component\", \"platform\", ...nextjsProps)} ref={ref} />\n    );\n  }\n\n  if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\n    return React.createElement(props.component, {\n      ...omit(props, \"component\", \"platform\", \"href\"),\n      ...{ to: props.href, ref },\n    });\n  }\n\n  return <a {...omit(props, \"component\", \"platform\")} ref={ref} />;\n});\n\nfunction isInternalHref(href: string): boolean {\n  return /^\\/(?!\\/)/.test(href);\n}\n","import React from \"react\";\n\nexport type PlasmicTranslator = (\n  str: string,\n  opts?: {\n    components?: {\n      [key: string]: React.ReactElement;\n    };\n  }\n) => React.ReactNode;\n\nexport const PlasmicTranslatorContext =\n  React.createContext<PlasmicTranslator | undefined>(undefined);\n\nexport interface TransProps {\n  children?: React.ReactNode;\n}\n\nfunction isIterable(val: any): val is Iterable<any> {\n  return val != null && typeof val[Symbol.iterator] === \"function\";\n}\n\nexport function genTranslatableString(elt: React.ReactNode) {\n  const components: {\n    [key: string]: React.ReactElement;\n  } = {};\n  let componentsCount = 0;\n\n  const getText = (node: React.ReactNode): string => {\n    if (!node) {\n      return \"\";\n    }\n    if (\n      typeof node === \"number\" ||\n      typeof node === \"boolean\" ||\n      typeof node === \"string\"\n    ) {\n      return node.toString();\n    }\n    if (typeof node !== \"object\") {\n      return \"\";\n    }\n    if (Array.isArray(node) || isIterable(node)) {\n      return Array.from(node)\n        .map((child) => getText(child))\n        .filter((child) => !!child)\n        .join(\"\");\n    }\n    const nodeChildren: React.ReactNode =\n      (hasKey(node, \"props\") &&\n        hasKey(node.props, \"children\") &&\n        (node.props.children as React.ReactNode | undefined)) ||\n      (hasKey(node, \"children\") && node.children) ||\n      [];\n    const contents = `${React.Children.toArray(nodeChildren)\n      .map((child) => getText(child))\n      .filter((child) => !!child)\n      .join(\"\")}`;\n    if (React.isValidElement(node) && node.type === React.Fragment) {\n      return contents;\n    }\n    const componentId = componentsCount + 1;\n    componentsCount++;\n    components[componentId] = React.isValidElement(node)\n      ? React.cloneElement(node as any, {\n          key: componentId,\n          children: undefined,\n        })\n      : (node as never);\n    return `<${componentId}>${contents}</${componentId}>`;\n  };\n\n  const str = getText(elt);\n  return {\n    str,\n    components,\n    componentsCount,\n  };\n}\n\nexport function Trans({ children }: TransProps) {\n  const _t = React.useContext(PlasmicTranslatorContext);\n  if (!_t) {\n    warnNoTranslationFunctionAtMostOnce();\n    return children;\n  }\n\n  const { str, components, componentsCount } = genTranslatableString(children);\n  return _t(str, componentsCount > 0 ? { components } : undefined);\n}\n\nlet hasWarned = false;\nfunction warnNoTranslationFunctionAtMostOnce() {\n  if (!hasWarned) {\n    console.warn(\n      \"Using Plasmic Translation but no translation function has been provided\"\n    );\n    hasWarned = true;\n  }\n}\n\nfunction hasKey<K extends string>(v: any, key: K): v is Record<K, any> {\n  return typeof v === \"object\" && v !== null && key in v;\n}\n","import * as React from \"react\";\nimport { mergeProps } from \"../react-utils\";\nimport { Trans } from \"./translation\";\n\nexport function PlasmicSlot<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: React.ComponentProps<T> & {\n    as?: T;\n    defaultContents?: React.ReactNode;\n    value?: React.ReactNode;\n  }\n) {\n  return renderPlasmicSlot(props);\n}\n\nexport function renderPlasmicSlot<\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(opts: {\n  as?: T;\n  defaultContents?: React.ReactNode;\n  value?: React.ReactNode;\n}) {\n  const { as, defaultContents, value, ...rest } = opts;\n\n  let content = value === undefined ? defaultContents : value;\n  if (!content || (Array.isArray(content) && content.length === 0)) {\n    return null;\n  }\n\n  // If the content is a raw string, then we need to wrap the raw string\n  // into an element, in case the slot is inside a flex-gap\n  // container (you cannot apply margin to just a text node).\n  const maybeString = maybeAsString(content);\n  if (maybeString) {\n    content = <div className=\"__wab_slot-string-wrapper\">{maybeString}</div>;\n  }\n\n  const nonEmptyProps = Object.keys(rest).filter((p) => !!(rest as any)[p]);\n  if (nonEmptyProps.length === 0) {\n    // No attrs to apply to the slot (which means the slot is unstyled), then\n    // just render the content directly; no need for style wrapper.\n    return <>{content}</>;\n  }\n\n  return React.createElement(\n    as || \"div\",\n    mergeProps({ className: \"__wab_slot\" }, rest),\n    content\n  );\n}\n\nfunction maybeAsString(node: React.ReactNode): string | undefined {\n  // Unwrap fragments\n  if (\n    React.isValidElement(node) &&\n    // Fragment and Trans don't render DOM elements\n    (node.type === React.Fragment || node.type === Trans)\n  ) {\n    return maybeAsString(node.props.children);\n  }\n\n  if (typeof node === \"string\") {\n    return node;\n  }\n\n  if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\n    return node[0];\n  }\n\n  return undefined;\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isBrowser, useIsomorphicLayoutEffect } from \"../react-utils\";\n\ntype Queries = { [name: string]: string };\n\nconst listeners: Array<() => void> = [];\nconst queries: Queries = {};\n\nfunction matchScreenVariants() {\n  if (!isBrowser) {\n    return [];\n  }\n  return Object.entries(queries)\n    .filter(([, query]) => window.matchMedia(query).matches)\n    .map(([name]) => name);\n}\n\n// undefined if screen variants have never been calculated\nlet curScreenVariants: string[] | undefined = undefined;\n\nfunction recalculateScreenVariants() {\n  const screenVariant = matchScreenVariants();\n  if (\n    !curScreenVariants ||\n    screenVariant.join(\"\") !== curScreenVariants.join(\"\")\n  ) {\n    curScreenVariants = screenVariant;\n    ReactDOM.unstable_batchedUpdates(() =>\n      listeners.forEach((listener) => listener())\n    );\n  }\n}\n\nfunction ensureInitCurScreenVariants() {\n  // Initializes curScreenVariants if it hadn't been before. Note that this must\n  // be called from within an effect.\n  if (curScreenVariants === undefined) {\n    curScreenVariants = matchScreenVariants();\n  }\n}\n\nif (isBrowser) {\n  window.addEventListener(\"resize\", recalculateScreenVariants);\n}\n\nexport function createUseScreenVariants(\n  isMulti: boolean,\n  screenQueries: Queries\n) {\n  Object.assign(queries, screenQueries);\n  curScreenVariants = undefined;\n\n  return function () {\n    // It is important that upon first render, we return [] or undefined, because\n    // that is what SSR will use, and the client must match.  In an effect (which\n    // only happens on the client), we then actually ask for the real screen variant\n    // and, if different from [] or undefined, forces a re-render.\n\n    const [, updateState] = React.useState<{}>();\n    const lastScreenVariantsRef = React.useRef<string[]>(\n      curScreenVariants || []\n    );\n\n    // We do useLayoutEffect instead of useEffect to immediately\n    // register our forceUpdate. This ensures that if there was\n    // a window resize event between render and effects, that the\n    // listener will be registered in time\n    useIsomorphicLayoutEffect(() => {\n      const updateIfChanged = () => {\n        if (\n          curScreenVariants &&\n          lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")\n        ) {\n          lastScreenVariantsRef.current = curScreenVariants;\n          // Force update\n          updateState({});\n        }\n      };\n\n      // Listeners are invoked whenever the window is resized\n      listeners.push(updateIfChanged);\n\n      // Initialize the curScreenVariants for the first time.  We don't need\n      // to invoke the listeners here because all components will already\n      // have this effect running and will re-render if the real screen\n      // variant is non-empty.\n      ensureInitCurScreenVariants();\n\n      // Now, if the curScreenVariants differs from what we returned last,\n      // then force a re-render.\n      updateIfChanged();\n      return () => {\n        // Remove our listener on unmount\n        listeners.splice(listeners.indexOf(updateIfChanged), 1);\n      };\n    }, []);\n\n    if (isMulti) {\n      return curScreenVariants || [];\n    } else if (curScreenVariants) {\n      return curScreenVariants[curScreenVariants.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n}\n","import { PlasmicDataSourceContextProvider } from \"@plasmicapp/data-sources-context\";\nimport { SSRProvider, useIsSSR as useAriaIsSSR } from \"@react-aria/ssr\";\nimport * as React from \"react\";\nimport { PlasmicHeadContext } from \"./PlasmicHead\";\nimport { PlasmicTranslator, PlasmicTranslatorContext } from \"./translation\";\n\nexport interface PlasmicRootContextValue {\n  platform?: \"nextjs\" | \"gatsby\";\n}\n\nconst PlasmicRootContext = React.createContext<\n  PlasmicRootContextValue | undefined\n>(undefined);\n\nexport interface PlasmicRootProviderProps {\n  platform?: \"nextjs\" | \"gatsby\";\n  children?: React.ReactNode;\n  translator?: PlasmicTranslator;\n  Head?: React.ComponentType<any>;\n}\n\nexport function PlasmicRootProvider(props: PlasmicRootProviderProps) {\n  const { platform, children, userAuthToken } = props as any;\n  const context = React.useMemo(\n    () => ({\n      platform,\n    }),\n    [platform]\n  );\n  const dataSourceContextValue = React.useMemo(\n    () => ({\n      userAuthToken,\n    }),\n    [userAuthToken]\n  );\n  return (\n    <PlasmicRootContext.Provider value={context}>\n      <SSRProvider>\n        <PlasmicDataSourceContextProvider value={dataSourceContextValue}>\n          <PlasmicTranslatorContext.Provider value={props.translator}>\n            <PlasmicHeadContext.Provider value={props.Head}>\n              {children}\n            </PlasmicHeadContext.Provider>\n          </PlasmicTranslatorContext.Provider>\n        </PlasmicDataSourceContextProvider>\n      </SSRProvider>\n    </PlasmicRootContext.Provider>\n  );\n}\n\nexport const useIsSSR = useAriaIsSSR;\n\nexport function useHasPlasmicRoot() {\n  return !!React.useContext(PlasmicRootContext);\n}\n\nlet hasWarnedSSR = false;\n/**\n * Warns the user if PlasmicRootProvider is not used\n */\nexport function useEnsureSSRProvider() {\n  const hasRoot = useHasPlasmicRoot();\n  if (hasRoot || hasWarnedSSR || process.env.NODE_ENV !== \"development\") {\n    return;\n  }\n\n  hasWarnedSSR = true;\n  console.warn(\n    `Plasmic: To ensure your components work correctly with server-side rendering, please use PlasmicRootProvider at the root of your application.  See https://docs.plasmic.app/learn/ssr`\n  );\n}\n","import * as React from \"react\";\nimport { useFocusRing as useAriaFocusRing } from \"@react-aria/focus\";\n\nfunction useFocused(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisible(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useFocusedWithin(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisibleWithin(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useHover() {\n  const [isHover, setHover] = React.useState(false);\n  return [\n    isHover,\n    {\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n    },\n  ];\n}\n\nfunction usePressed() {\n  const [isPressed, setPressed] = React.useState(false);\n  return [\n    isPressed,\n    {\n      onMouseDown: () => setPressed(true),\n      onMouseUp: () => setPressed(false),\n    },\n  ];\n}\n\nconst TRIGGER_TO_HOOK = {\n  useHover,\n  useFocused,\n  useFocusVisible,\n  useFocusedWithin,\n  useFocusVisibleWithin,\n  usePressed,\n} as const;\n\ntype TriggerType = keyof typeof TRIGGER_TO_HOOK;\n\ninterface TriggerOpts {\n  isTextInput?: boolean;\n}\n\n/**\n * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,\n * as it's not valid to install variable React hooks!\n */\nexport function useTrigger(trigger: TriggerType, opts: TriggerOpts) {\n  return TRIGGER_TO_HOOK[trigger](opts) as [\n    boolean,\n    React.HTMLAttributes<HTMLElement>\n  ];\n}\n","// Utilities used by generated code\nimport _classNames from \"classnames\";\nexport const classNames = _classNames;\nexport { omit, pick } from \"./common\";\nexport { HTMLElementRefOf, StrictProps } from \"./react-utils\";\nexport {\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  Flex,\n  hasVariant,\n  makeFragment,\n  mergeVariantsWithStates,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  wrapWithClassName,\n} from \"./render/elements\";\nexport { ensureGlobalVariants } from \"./render/global-variants\";\nexport { PlasmicHead, plasmicHeadMeta } from \"./render/PlasmicHead\";\nexport { PlasmicIcon } from \"./render/PlasmicIcon\";\nexport { PlasmicImg } from \"./render/PlasmicImg\";\nexport { PlasmicLink } from \"./render/PlasmicLink\";\nexport { PlasmicSlot, renderPlasmicSlot } from \"./render/PlasmicSlot\";\nexport { createUseScreenVariants } from \"./render/screen-variants\";\nexport { PlasmicRootProvider, useIsSSR } from \"./render/ssr\";\nexport { Stack } from \"./render/Stack\";\nexport { genTranslatableString, Trans } from \"./render/translation\";\nexport { useTrigger } from \"./render/triggers\";\n","import * as React from \"react\";\nimport { groupBy, mapValues } from \"../common\";\nimport { SingleChoiceArg } from \"../render/elements\";\n\nexport let PLUME_STRICT_MODE = true;\n\nexport function setPlumeStrictMode(mode: boolean) {\n  PLUME_STRICT_MODE = mode;\n}\n\ntype VariantArgChoices<T> = T extends (infer M)[]\n  ? M\n  : T extends SingleChoiceArg<infer M>\n  ? M\n  : never;\ntype VariantArgsChoices<V> = { [k in keyof V]-?: VariantArgChoices<V[k]> };\ntype DictValues<V extends Record<string, any>> = V[keyof V];\ntype DictTuples<V extends Record<string, any>> = DictValues<\n  { [K in keyof V]: [K, V[K]] }\n>;\nexport type VariantDefTuple<V> = DictTuples<VariantArgsChoices<V>>;\n\ntype DistributeTuple<T> = T extends [infer T1, infer T2]\n  ? { group: T1; variant: T2 }\n  : never;\n\nexport type VariantDef<V> = DistributeTuple<VariantDefTuple<V>>;\n\nexport type PlasmicClass<\n  V extends Record<string, any>,\n  A extends Record<string, any>,\n  O extends Record<string, any>\n> = {\n  (props: { variants?: V; args?: A; overrides?: O }): React.ReactElement | null;\n  internalVariantProps: (keyof V)[];\n  internalArgProps: (keyof A)[];\n};\n\nexport type AnyPlasmicClass = PlasmicClass<any, any, any>;\n\nexport type PlasmicClassVariants<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<infer V, any, any> ? V : unknown;\nexport type PlasmicClassArgs<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<any, infer A, any> ? A : unknown;\nexport type PlasmicClassOverrides<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<any, any, infer O> ? O : unknown;\n\ntype BooleanLike = boolean | undefined | null;\n\nexport function mergeVariantToggles<V>(\n  ...toggles: { def?: VariantDef<V>; active: BooleanLike }[]\n) {\n  const definedToggles = toggles.filter((x) => !!x.def) as {\n    def: VariantDef<V>;\n    active: BooleanLike;\n  }[];\n  const grouped = groupBy(definedToggles, ({ def }) => def.group as string);\n  return mapValues(grouped, (subToggles) => {\n    return Object.fromEntries(\n      subToggles.map(({ def, active }) => [def.variant, !!active])\n    );\n  });\n}\n\nexport function noOutline() {\n  return { outline: \"none\" };\n}\n\nexport function getPlumeType(child: React.ReactChild): string | undefined {\n  if (!React.isValidElement(child)) {\n    return undefined;\n  }\n  const childType = child.type as any;\n  return (childType.__plumeType || childType.getPlumeType?.(child.props)) as\n    | string\n    | undefined;\n}\n","import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\ninterface CommonProps {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\ninterface HtmlButtonProps\n  extends Omit<React.ComponentProps<\"button\">, \"ref\" | \"disabled\"> {}\n\ninterface HtmlAnchorProps\n  extends Omit<React.ComponentProps<\"a\">, \"ref\" | \"href\"> {\n  link?: string;\n}\n\nexport type BaseButtonProps = CommonProps & HtmlButtonProps & HtmlAnchorProps;\n\nexport type HtmlAnchorOnlyProps = Exclude<\n  keyof HtmlAnchorProps,\n  keyof HtmlButtonProps\n>;\nexport type HtmlButtonOnlyProps = Exclude<\n  keyof HtmlButtonProps,\n  keyof HtmlAnchorProps\n>;\n\nexport type ButtonRef = React.Ref<HTMLButtonElement | HTMLAnchorElement>;\n\ninterface ButtonConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useButton<P extends BaseButtonProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: ButtonConfig<C>,\n  ref: ButtonRef = null\n) {\n  const {\n    link,\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    children,\n    ...rest\n  } = props;\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n    [config.contentSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: !!link ? \"a\" : \"button\",\n      props: {\n        ...omit(\n          rest as any,\n          ...plasmicClass.internalArgProps,\n          ...plasmicClass.internalVariantProps\n        ),\n        ref: ref,\n        disabled: isDisabled,\n        ...(!!link && { href: link }),\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import * as React from \"react\";\nimport { pick, pickBy } from \"../common\";\nimport {\n  AnyPlasmicClass,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n} from \"./plume-utils\";\n\nexport interface StyleProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function getStyleProps<P extends StyleProps>(props: P): StyleProps {\n  return pick(props, \"className\", \"style\");\n}\n\nexport function getDefaultPlasmicProps<C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: Record<string, any>\n) {\n  return {\n    plasmicProps: {\n      variants: pick(\n        props,\n        ...plasmicClass.internalVariantProps\n      ) as PlasmicClassVariants<C>,\n      args: pick(\n        props,\n        ...plasmicClass.internalArgProps\n      ) as PlasmicClassArgs<C>,\n      overrides: {} as PlasmicClassOverrides<C>,\n    },\n  };\n}\n\nconst RE_DATA_PROP = /^(data-.*)$/;\n\nexport function getDataProps(props: Record<string, any>) {\n  return pickBy(props, (k) => RE_DATA_PROP.test(k));\n}\n","import { AriaCheckboxProps } from \"@react-types/checkbox\";\nimport * as React from \"react\";\nimport { useCheckbox as useAriaCheckbox } from \"@react-aria/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\n\nexport type CheckboxRef = React.Ref<CheckboxRefValue>;\nexport interface CheckboxRefValue extends CheckboxState {\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface CheckboxState {\n  setChecked: (checked: boolean) => void;\n}\n\nexport interface CheckboxProps\n  extends Omit<AriaCheckboxProps, \"isSelected\" | \"defaultSelected\">,\n    StyleProps {\n  /**\n   * Whether the Checkbox is checked or not; controlled\n   */\n  isChecked?: boolean;\n\n  /**\n   * Whether the Checkbox is checked by default; uncontrolled\n   */\n  defaultChecked?: boolean;\n\n  /**\n   * Whether the Checkbox is in an \"indeterminate\" state; this usually\n   * refers to a \"check all\" that is used to check / uncheck many other\n   * checkboxes, and is visually indeterminate if some of its controlled\n   * checkboxes are checked and some are not.\n   */\n  isIndeterminate?: boolean;\n}\n\nfunction asAriaCheckboxProps(props: CheckboxProps) {\n  const ariaProps = {\n    ...props,\n    isSelected: props.isChecked,\n    defaultSelected: props.defaultChecked,\n  };\n  delete ariaProps[\"isChecked\"];\n  delete ariaProps[\"defaultChecked\"];\n  return ariaProps;\n}\n\ninterface CheckboxConfig<C extends AnyPlasmicClass> {\n  isCheckedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isIndeterminateVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  noLabelVariant?: VariantDef<PlasmicClassVariants<C>>;\n  labelSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useCheckbox<P extends CheckboxProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: CheckboxConfig<C>,\n  ref: CheckboxRef = null\n) {\n  const { children, isDisabled, isIndeterminate } = props;\n  useEnsureSSRProvider();\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n  const ariaProps = asAriaCheckboxProps(props);\n  const state = useToggleState(ariaProps);\n  const { inputProps } = useAriaCheckbox(ariaProps, state, inputRef);\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      {\n        def: config.isDisabledVariant,\n        active: isDisabled,\n      },\n      {\n        def: config.isCheckedVariant,\n        active: state.isSelected,\n      },\n      {\n        def: config.isIndeterminateVariant,\n        active: isIndeterminate,\n      },\n      {\n        def: config.noLabelVariant,\n        active: !children,\n      }\n    ),\n  };\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"label\",\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children) => (\n        <>\n          <VisuallyHidden isFocusable>\n            <input {...inputProps} ref={inputRef} />\n          </VisuallyHidden>\n          {children}\n        </>\n      ),\n    },\n  };\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.labelSlot ? { [config.labelSlot]: children } : {}),\n  };\n\n  const plumeState: CheckboxState = React.useMemo(\n    () => ({\n      setChecked: (checked: boolean) => state.setSelected(checked),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      setChecked: (checked) => plumeState.setChecked(checked),\n    }),\n    [rootRef, inputRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n      args: args as PlasmicClassArgs<C>,\n    },\n    state: plumeState,\n  };\n}\n","/**\n * In general, we try not to expose react-aria's Collections API to Plume users.\n * The Collections API is how react-aria users pass data about collections of\n * things using the built-in Item and Section components, which are abstract,\n * metadata-only components that don't render anything but only serve to specify\n * data.  For example, here's how you would use react-spectrum's Picker:\n *\n *   <Picker>\n *     <Section title=\"Asia\">\n *       <Item key=\"taiwan\">Taiwan</Item>\n *       <Item key=\"japan\">Japan</Item>\n *       <Item key=\"china\">China</Item>\n *     </Section>\n *     <Section title=\"Europe\">\n *       <Item key=\"germany\">Germany</Item>\n *       <Item key=\"france\">France</Item>\n *     </Section>\n *   </Picker>\n *\n * You would re-use this same Item/Section components to pass similar things to\n * Menu, Tabs, etc.\n *\n * For Plasmic, this API is too abstract.  The user has explicitly designed components\n * like Select.Option and Select.OptionGroup, and it is weird that they don't actually\n * use these components. It is more natural to do:\n *\n *   <Select>\n *     <Select.OptionGroup title=\"Asia\">\n *       <Select.Option key=\"taiwan\">Taiwan</Select>\n *     </Select.OptionGroup>\n *   </Select>\n *\n * For Plume, we let users directly use the components they designed, both to collect\n * information and to perform actual rendering.  For example, for Plume,\n * you'd use Select.Option instead of Item, and Select.OptionGroup instead of Section.\n * This means that the Select.Option props will collect the same information Item\n * does.\n *\n * A component like Select.Option then serves two purposes:\n *\n * 1. Allow users to specify the collection of data, like in the above example\n *    Here, we're mainly interested in the props in those ReactElements so\n *    we can pass the Item/Section data onto react-aria's APIs.  We are not\n *    actually rendering these elements.\n * 2. Once react-aria's Collections API has gone through them and built\n *    Collection \"nodes\", we then create cloned versions of these elements\n *    with the corresponding node passed in as a secret prop.  These ReactElements\n *    are then actually used to _render_ the corresponding Option / OptionGroup.\n *\n * This file contains helper functions to help with implementing the above.\n *\n * Note also that most of the collections-based react-aria components expose\n * a parallel API that accepts a list of \"items\" and a render prop, instead\n * of list of Item/Section elements.  This is for efficiency, but we are opting\n * to only support the composite-component pattern for now for simplicity.\n */\n\nimport { Node } from \"@react-types/shared\";\nimport React from \"react\";\nimport { Item, Section } from \"@react-stately/collections\";\nimport { isString } from \"../common\";\nimport { getElementTypeName, toChildArray } from \"../react-utils\";\nimport { getPlumeType, PLUME_STRICT_MODE } from \"./plume-utils\";\n\nexport interface PlasmicLoaderProps<T> {\n  component: string;\n  componentProps: T;\n}\n\n/**\n * Props for a Plume component that corresponds to an Item\n */\nexport interface ItemLikeProps {\n  /**\n   * value key corresponding to this item. Not required if you use the\n   * `key` prop instead.\n   */\n  value?: string | null;\n\n  /**\n   * The text string value corresponding to this item. Used to support\n   * keyboard type-ahead.  If not specified, then will be derived from\n   * `children` if it is a string, or the `value` or `key`.\n   */\n  textValue?: string;\n\n  /**\n   * aria-label for this item.\n   */\n  \"aria-label\"?: string;\n\n  /**\n   * Primary content label for this item.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * If true, this item will not be selectable.\n   */\n  isDisabled?: boolean;\n}\n\ntype LoaderAwareItemLikeProps =\n  | ItemLikeProps\n  | PlasmicLoaderProps<ItemLikeProps>;\n\n/**\n * Props for a Plume component that corresponds to a Section\n */\nexport interface SectionLikeProps {\n  /**\n   * Heading content of the title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * aria-label for this section\n   */\n  \"aria-label\"?: string;\n\n  /**\n   * A list of items that belong in this group\n   */\n  children?: React.ReactNode;\n}\n\ntype LoaderAwareSectionLikeProps =\n  | SectionLikeProps\n  | PlasmicLoaderProps<SectionLikeProps>;\n\n/**\n * Given children of a component like Select or Menu, derive the items\n * that we will pass into the Collections API.  These will be\n * ReactElement<ItemLikeProps|SectionLikeProps>[].\n *\n * Will also assign keys to items by their index in the collection,\n * and collect the keys of disabled items.\n */\nexport function deriveItemsFromChildren<T extends React.ReactElement>(\n  children: React.ReactNode,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n  }\n) {\n  if (!children) {\n    return {\n      items: [] as T[],\n      disabledKeys: [] as React.Key[],\n    };\n  }\n\n  const { itemPlumeType, sectionPlumeType, invalidChildError } = opts;\n\n  // For Plume items without an explicit key, we assign a key as the index\n  // of the collection.\n  let itemCount = 0;\n  let sectionCount = 0;\n\n  const ensureValue = (element: React.ReactElement) => {\n    if (!propInChild(element, \"value\")) {\n      if (opts.requireItemValue && PLUME_STRICT_MODE) {\n        throw new Error(\n          `Must specify a \"value\" prop for ${getElementTypeName(element)}`\n        );\n      } else {\n        return cloneChild(element, { value: `${itemCount++}` });\n      }\n    } else {\n      // Still increment count even if key is present, so that the\n      // auto-assigned key really reflects the index\n      itemCount++;\n      return element;\n    }\n  };\n\n  const disabledKeys: React.Key[] = [];\n\n  const flattenedChildren = (\n    children: React.ReactNode\n  ): React.ReactElement[] => {\n    return toChildArray(children).flatMap((child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === React.Fragment) {\n          return flattenedChildren(child.props.children);\n        }\n        const type = getPlumeType(child);\n        if (type === itemPlumeType) {\n          child = ensureValue(child);\n          const childKey = getItemLikeKey(child);\n          if (getChildProp(child, \"isDisabled\") && !!childKey) {\n            disabledKeys.push(childKey);\n          }\n          return [child];\n        }\n        if (type === sectionPlumeType) {\n          return [\n            cloneChild(child, {\n              // key of section doesn't actually matter, just needs\n              // to be unique\n              key: child.key ?? `section-${sectionCount++}`,\n              children: flattenedChildren(getChildProp(child, \"children\")),\n            }),\n          ];\n        }\n      }\n\n      if (PLUME_STRICT_MODE) {\n        throw new Error(invalidChildError ?? `Unexpected child`);\n      } else {\n        return [];\n      }\n    });\n  };\n\n  return { items: flattenedChildren(children) as T[], disabledKeys };\n}\n\nexport function useDerivedItemsFromChildren<T extends React.ReactElement>(\n  children: React.ReactNode,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n  }\n) {\n  const {\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n  } = opts;\n  return React.useMemo(() => {\n    return deriveItemsFromChildren<T>(children, {\n      itemPlumeType,\n      sectionPlumeType,\n      invalidChildError,\n      requireItemValue,\n    });\n  }, [\n    children,\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n  ]);\n}\n\n/**\n * Given a Collection node, create the React element that we should use\n * to render it.\n */\nexport function renderCollectionNode(node: Node<any>) {\n  // node.rendered should already have our item-like or section-like Plume\n  // component elements, so we just need to clone them with a secret\n  // _node prop that we use to render.\n  return cloneChild(node.rendered as React.ReactElement, {\n    _node: node,\n    key: node.key,\n  });\n}\n\n/**\n * Renders a item-like or section-like Plume component element into an\n * Item or a Section element.\n */\nexport function renderAsCollectionChild<\n  T extends React.ReactElement<\n    LoaderAwareItemLikeProps | LoaderAwareSectionLikeProps\n  >\n>(\n  child: T,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n  }\n) {\n  const plumeType = getPlumeType(child);\n  if (plumeType === opts.itemPlumeType) {\n    const option = child as React.ReactElement<LoaderAwareItemLikeProps>;\n\n    // We look at the children passed to the item-like element, and derive key\n    // or textValue from it if it is a string\n    const content = getChildProp(option, \"children\");\n\n    // The children render prop needs to return an <Item/>\n    return (\n      <Item\n        // We use ItemLike.value if the user explicitly specified a value,\n        // and we fallback to key.  If the user specified neither, then\n        // the Collections API will generate a unique key for this item.\n        key={getItemLikeKey(option)}\n        // textValue is either explicitly specified by the user, or we\n        // try to derive it if `content` is a string.\n        textValue={\n          getChildProp(option, \"textValue\") ??\n          (isString(content)\n            ? content\n            : propInChild(option, \"value\")\n            ? getChildProp(option, \"value\")\n            : option.key)\n        }\n        aria-label={getChildProp(option, \"aria-label\")}\n      >\n        {\n          // Note that what we setting the item-like element as the children\n          // here, and not content; we want the entire item-like Plume element to\n          // end up as Node.rendered.\n        }\n        {option}\n      </Item>\n    );\n  } else {\n    const group = child as React.ReactElement<LoaderAwareSectionLikeProps>;\n    return (\n      <Section\n        // Note that we are using the whole section-like element as the title\n        // here, and not group.props.title; we want the entire section-like\n        // Plume element to end up as Node.rendered.\n        title={group}\n        aria-label={getChildProp(group, \"aria-label\")}\n        // We are flattening and deriving the descendant Options as items here.\n        // group.props.children should've already been cleaned up by\n        // deriveItemsFromChildren()\n        items={getChildProp(group, \"children\") as React.ReactElement[]}\n      >\n        {\n          // We use the same render function to turn descendent Options into Items\n        }\n        {(c: React.ReactElement) => renderAsCollectionChild(c, opts)}\n      </Section>\n    );\n  }\n}\n\nfunction getItemLikeKey(element: React.ReactElement<LoaderAwareItemLikeProps>) {\n  return getChildProp(element, \"value\") ?? element.key;\n}\n\n// PlasmicLoader-aware function to get prop from child.\nexport function getChildProp(child: React.ReactElement, prop: string) {\n  return \"componentProps\" in child.props\n    ? child.props.componentProps[prop]\n    : child.props[prop];\n}\n\n// PlasmicLoader-aware function to check `if (prop in element.props)`.\nfunction propInChild(child: React.ReactElement, prop: string): boolean {\n  return \"componentProps\" in child.props\n    ? prop in child.props.componentProps\n    : prop in child.props;\n}\n\n// PlasmicLoader-aware function to clone React element.\nfunction cloneChild(child: React.ReactElement, props: Record<string, any>) {\n  if ((child.type as any).getPlumeType) {\n    // If React element has getPlumeType(), assume that it is PlasmicLoader,\n    // so add nodeProps to componentProps instead of element props.\n    return React.cloneElement(child, {\n      componentProps: {\n        ...child.props.componentProps,\n        ...props,\n      },\n      ...(props.key ? { key: props.key } : {}),\n    });\n  }\n\n  return React.cloneElement(child, props);\n}\n","import type { Placement } from \"@react-types/overlays\";\nimport type { FocusStrategy } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport type { OverlayTriggerState } from \"@react-stately/overlays\";\n\nexport interface TriggeredOverlayContextValue {\n  triggerRef: React.RefObject<HTMLElement>;\n  state: OverlayTriggerState;\n  autoFocus?: boolean | FocusStrategy;\n\n  placement?: Placement;\n  overlayMatchTriggerWidth?: boolean;\n  overlayMinTriggerWidth?: boolean;\n  overlayWidth?: number;\n}\n\nexport const TriggeredOverlayContext = React.createContext<\n  TriggeredOverlayContextValue | undefined\n>(undefined);\n","import * as React from \"react\";\nimport type { TreeState } from \"@react-stately/tree\";\nimport type { BaseMenuProps } from \"./menu\";\n\nexport interface MenuContextValue {\n  menuProps: BaseMenuProps;\n  state: TreeState<any>;\n}\n\nexport const MenuContext = React.createContext<MenuContextValue | undefined>(\n  undefined\n);\n","import { AriaMenuProps } from \"@react-types/menu\";\nimport { AriaLabelingProps, DOMProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenu as useAriaMenu } from \"@react-aria/menu\";\nimport { useTreeState } from \"@react-stately/tree\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  renderAsCollectionChild,\n  renderCollectionNode,\n  useDerivedItemsFromChildren,\n} from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuProps extends DOMProps, AriaLabelingProps, StyleProps {\n  /**\n   * List of `Menu.Item`s or `Menu.Group`s that make up the menu\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Called with the value of a `Menu.Item` when it is selected.\n   */\n  onAction?: (value: string) => void;\n}\n\nexport type MenuRef = React.Ref<MenuRefValue>;\nexport interface MenuRefValue extends MenuState {\n  getRoot: () => HTMLElement | null;\n}\n\nconst COLLECTION_OPTS = {\n  itemPlumeType: \"menu-item\",\n  sectionPlumeType: \"menu-group\",\n};\n\nexport interface MenuConfig<C extends AnyPlasmicClass> {\n  isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  itemsSlot: keyof PlasmicClassArgs<C>;\n  itemsContainer: keyof PlasmicClassOverrides<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\n/**\n * Converts props from BaseMenuProps to react-aria's useMenu() props.\n */\nfunction asAriaMenuProps(props: BaseMenuProps) {\n  const { children, ...rest } = props;\n  const { items, disabledKeys } = useDerivedItemsFromChildren(children, {\n    ...COLLECTION_OPTS,\n    invalidChildError: `Can only use Menu.Item and Menu.Group as children to Menu`,\n    requireItemValue: false,\n  });\n\n  const collectionChildRenderer = React.useCallback(\n    (child) => renderAsCollectionChild(child, COLLECTION_OPTS),\n    []\n  );\n\n  return {\n    ariaProps: {\n      ...rest,\n      children: collectionChildRenderer,\n      items,\n      disabledKeys,\n    } as AriaMenuProps<any>,\n  };\n}\n\nexport interface MenuState {\n  getFocusedValue: () => string | null;\n  setFocusedValue: (value: string) => void;\n}\n\nexport function useMenu<P extends BaseMenuProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: MenuConfig<C>,\n  ref: MenuRef = null\n) {\n  useEnsureSSRProvider();\n  const { ariaProps } = asAriaMenuProps(props);\n  const triggerContext = React.useContext(TriggeredOverlayContext);\n  const rootRef = React.useRef<HTMLElement>(null);\n\n  const state = useTreeState(ariaProps);\n\n  const menuListRef = React.useRef<HTMLUListElement>(null);\n\n  const { menuProps } = useAriaMenu(\n    {\n      ...ariaProps,\n      autoFocus: triggerContext?.autoFocus,\n    },\n    state,\n    menuListRef\n  );\n\n  const contextValue = React.useMemo(\n    () => ({ state, menuProps: props }),\n    [state, props]\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n    },\n    [config.itemsContainer]: {\n      as: \"ul\",\n      props: mergeProps(menuProps, {\n        ref: menuListRef,\n        style: {\n          ...noOutline(),\n        },\n      }),\n    },\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.itemsSlot]: (\n      <MenuContext.Provider value={contextValue}>\n        {Array.from(state.collection).map((node) => renderCollectionNode(node))}\n      </MenuContext.Provider>\n    ),\n  };\n\n  const plumeState: MenuState = React.useMemo(\n    () => ({\n      getFocusedValue: () => state.selectionManager.focusedKey as string | null,\n      setFocusedValue: (value: string) =>\n        state.selectionManager.setFocusedKey(value),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      getFocusedValue: () => plumeState.getFocusedValue(),\n      setFocusedValue: (key) => plumeState.setFocusedValue(key),\n    }),\n    [rootRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { useSeparator } from \"@react-aria/separator\";\nimport { pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport { renderCollectionNode, SectionLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuGroupProps extends SectionLikeProps, StyleProps {}\n\ninterface MenuGroupConfig<C extends AnyPlasmicClass> {\n  noTitleVariant: PlasmicClassVariants<C>;\n  isFirstVariant: PlasmicClassVariants<C>;\n\n  itemsSlot: keyof PlasmicClassArgs<C>;\n  titleSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  separator: keyof PlasmicClassOverrides<C>;\n  titleContainer: keyof PlasmicClassOverrides<C>;\n  itemsContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useMenuGroup<\n  P extends BaseMenuGroupProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: MenuGroupConfig<C>) {\n  const context = React.useContext(MenuContext);\n\n  const node = (props as any)._node as\n    | Node<React.ReactElement<BaseMenuGroupProps>>\n    | undefined;\n\n  if (!context || !node) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\"You can only use a Menu.Group within a Menu component.\");\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { headingProps, groupProps } = useMenuSection({\n    heading: props.title,\n    \"aria-label\": props[\"aria-label\"],\n  });\n\n  const { separatorProps } = useSeparator({\n    elementType: \"li\",\n  });\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.noTitleVariant, active: !props.title },\n      {\n        def: config.isFirstVariant,\n        active: context.state.collection.getFirstKey() === node.key,\n      }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.titleSlot]: props.title,\n    [config.itemsSlot]: Array.from(node.childNodes).map((childNode) =>\n      renderCollectionNode(childNode)\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: getStyleProps(props),\n    },\n    [config.separator]: {\n      props: {\n        ...separatorProps,\n      },\n      as: \"li\",\n    },\n    [config.titleContainer]: {\n      props: {\n        role: \"presentation\",\n        ...headingProps,\n      },\n      ...(!props.title && {\n        render: () => null,\n      }),\n    },\n    [config.itemsContainer]: {\n      props: {\n        ...groupProps,\n      },\n      as: \"ul\",\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenuItem as useAriaMenuItem } from \"@react-aria/menu\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { ItemLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getDefaultPlasmicProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuItemProps extends ItemLikeProps {\n  /**\n   * Called when this item is selected\n   */\n  onAction?: (key: string) => void;\n}\n\ninterface MenuItemConfig<C extends AnyPlasmicClass> {\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  labelSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  labelContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useMenuItem<\n  P extends BaseMenuItemProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: MenuItemConfig<C>) {\n  const menuContext = React.useContext(MenuContext);\n  const triggerContext = React.useContext(TriggeredOverlayContext);\n\n  if (!menuContext) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\"You can only use a Menu.Item within a Menu component.\");\n    }\n\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children, onAction } = props;\n\n  const { state, menuProps } = menuContext;\n\n  // We pass in the Node secretly as an undocumented prop from <Select />\n  const node = (props as any)._node as Node<\n    React.ReactElement<BaseMenuItemProps>\n  >;\n\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isHighlighted =\n    state.selectionManager.isFocused &&\n    state.selectionManager.focusedKey === node.key;\n\n  const ref = React.useRef<HTMLLIElement>(null);\n\n  const { menuItemProps, labelProps } = useAriaMenuItem(\n    mergeProps(\n      {\n        // We need to merge both the onAction on MenuItem and the onAction\n        // on Menu\n        onAction,\n      },\n      {\n        onAction: menuProps.onAction,\n        onClose: triggerContext?.state.close,\n      },\n      {\n        isDisabled,\n        \"aria-label\": node && node[\"aria-label\"],\n        key: node.key,\n        isVirtualized: false,\n        closeOnSelect: true,\n      }\n    ),\n    state,\n    ref\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isDisabledVariant, active: isDisabled },\n      { def: config.isHighlightedVariant, active: isHighlighted }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.labelSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"li\",\n      props: mergeProps(menuItemProps, { ref, style: noOutline() }),\n    },\n    [config.labelContainer]: {\n      props: { ...labelProps },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Placement } from \"@react-types/overlays\";\nimport * as React from \"react\";\nimport { useMenuTrigger as useAriaMenuTrigger } from \"@react-aria/menu\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\nimport { mergeProps } from \"../../react-utils\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport { getPlumeType, PLUME_STRICT_MODE } from \"../plume-utils\";\nimport { TriggeredOverlayContextValue } from \"../triggered-overlay/context\";\n\n/**\n * A menu trigger hook that combines react-aria's useMenuTrigger, useAriaMenuTrigger,\n * useOverlayPosition, useOverlay, and usePress\n */\nexport function useMenuTrigger(\n  opts: {\n    isDisabled?: boolean;\n    triggerRef: React.RefObject<HTMLElement>;\n    placement?: Placement;\n    menuMatchTriggerWidth?: boolean;\n    menuWidth?: number;\n    menu:\n      | React.ReactElement<BaseMenuProps>\n      | (() => React.ReactElement<BaseMenuProps>);\n  },\n  state: MenuTriggerState\n) {\n  const {\n    triggerRef,\n    isDisabled,\n    placement,\n    menuMatchTriggerWidth,\n    menuWidth,\n    menu,\n  } = opts;\n\n  const { menuTriggerProps: triggerPressProps, menuProps } = useAriaMenuTrigger(\n    {\n      type: \"menu\",\n      isDisabled,\n    },\n    state,\n    triggerRef\n  );\n\n  const { pressProps: triggerProps } = usePress({\n    ...triggerPressProps,\n    isDisabled,\n  });\n\n  const makeMenu = () => {\n    let realMenu = typeof menu === \"function\" ? menu() : menu;\n    if (!realMenu) {\n      return null;\n    }\n    if (getPlumeType(realMenu) !== \"menu\") {\n      if (PLUME_STRICT_MODE) {\n        throw new Error(`Must use an instance of the Menu component.`);\n      }\n      return null;\n    }\n\n    return React.cloneElement(realMenu, mergeProps(realMenu.props, menuProps));\n  };\n\n  const triggerContext: TriggeredOverlayContextValue = React.useMemo(\n    () => ({\n      triggerRef,\n      state,\n      autoFocus: state.focusStrategy ?? true,\n      placement,\n      overlayMatchTriggerWidth: menuMatchTriggerWidth,\n      overlayMinTriggerWidth: true,\n      overlayWidth: menuWidth,\n    }),\n    [triggerRef, state, placement, menuMatchTriggerWidth, menuWidth]\n  );\n\n  return {\n    triggerProps,\n    makeMenu,\n    triggerContext,\n  };\n}\n","import { Placement } from \"@react-types/overlays\";\nimport * as React from \"react\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { mergeProps } from \"../../react-utils\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { useMenuTrigger } from \"./menu-trigger\";\n\nexport interface DropdownMenuProps {\n  /**\n   * A ReactElement that takes in a `ref` as well as the usual mouse and\n   * pointer events. The dropdown menu will be positioned relative to this\n   * trigger.\n   */\n  children: React.ReactElement;\n\n  /**\n   * The menu to show; must be either a ReactElement of Menu type, or\n   * a function that creates one if you prefer to delay creating it until\n   * the menu has been triggered.\n   */\n  menu:\n    | React.ReactElement<BaseMenuProps>\n    | (() => React.ReactElement<BaseMenuProps>);\n\n  /**\n   * Where to place the menu relative to the trigger.\n   */\n  placement?: Placement;\n\n  /**\n   * Whether the menu is currently shown.\n   */\n  isOpen?: boolean;\n\n  /**\n   * Uncontrolled open state.\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Event handler fired when Menu's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n}\n\nexport function DropdownMenu(props: DropdownMenuProps) {\n  const {\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    children,\n    placement,\n    menu,\n  } = props;\n\n  const triggerRef = React.useRef<HTMLElement>(null);\n\n  const state = useMenuTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    shouldFlip: true,\n  });\n\n  const { triggerProps, makeMenu, triggerContext } = useMenuTrigger(\n    {\n      triggerRef,\n      placement,\n      menu,\n    },\n    state\n  );\n\n  return (\n    <TriggeredOverlayContext.Provider value={triggerContext}>\n      {React.cloneElement(\n        children,\n        mergeProps(children.props, triggerProps, { ref: triggerRef })\n      )}\n      {state.isOpen && makeMenu()}\n    </TriggeredOverlayContext.Provider>\n  );\n}\n","import { Placement } from \"@react-types/overlays\";\nimport { DOMProps, FocusableProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { useMenuTrigger } from \"./menu-trigger\";\n\nexport interface BaseMenuButtonProps\n  extends DOMProps,\n    FocusableProps,\n    StyleProps,\n    Pick<React.ComponentProps<\"button\">, \"title\"> {\n  /**\n   * The menu to show; can either be a Menu instance, or a function that returns a Menu\n   * instance if you want to defer creating the instance till when it's opened.\n   */\n  menu:\n    | React.ReactElement<BaseMenuProps>\n    | (() => React.ReactElement<BaseMenuProps>);\n\n  /**\n   * Whether the button is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Whether the menu is currently shown.\n   */\n  isOpen?: boolean;\n\n  /**\n   * Uncontrolled open state\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Event handler fired when Menu's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /**\n   * Desired placement location of the Select dropdown\n   */\n  placement?: Placement;\n  /**\n   * If true, menu width will always match the trigger button width.\n   * If false, then menu width will have min-width matching the\n   * trigger button width.\n   */\n  menuMatchTriggerWidth?: boolean;\n\n  /**\n   * If set, menu width will be exactly this width, overriding\n   * menuMatchTriggerWidth.\n   */\n  menuWidth?: number;\n}\n\nexport interface MenuButtonConfig<C extends AnyPlasmicClass> {\n  isOpenVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  menuSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  trigger: keyof PlasmicClassOverrides<C>;\n}\n\ninterface MenuButtonState {\n  open: () => void;\n  close: () => void;\n  isOpen: () => boolean;\n}\n\nexport type MenuButtonRef = React.Ref<MenuButtonRefValue>;\n\nexport interface MenuButtonRefValue extends MenuButtonState {\n  getRoot: () => HTMLElement | null;\n  getTrigger: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\nexport function useMenuButton<\n  P extends BaseMenuButtonProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: MenuButtonConfig<C>,\n  outerRef: MenuButtonRef = null\n) {\n  const {\n    placement,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    menu,\n    autoFocus,\n    menuMatchTriggerWidth,\n    menuWidth,\n  } = props;\n\n  useEnsureSSRProvider();\n  const rootRef = React.useRef<HTMLElement>(null);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n\n  const state = useMenuTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    shouldFlip: true,\n  });\n\n  const { triggerProps, makeMenu, triggerContext } = useMenuTrigger(\n    {\n      isDisabled,\n      triggerRef,\n      placement,\n      menuMatchTriggerWidth,\n      menuWidth,\n      menu,\n    },\n    state\n  );\n\n  const { focusableProps: triggerFocusProps } = useFocusable(props, triggerRef);\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isOpenVariant, active: state.isOpen },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.menuSlot]: state.isOpen ? makeMenu() : undefined,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      wrapChildren: (children) => (\n        <TriggeredOverlayContext.Provider value={triggerContext}>\n          {children}\n        </TriggeredOverlayContext.Provider>\n      ),\n      props: {\n        ref: rootRef,\n      },\n    },\n    [config.trigger]: {\n      props: mergeProps(\n        triggerProps,\n        triggerFocusProps,\n        getStyleProps(props),\n        pick(props, \"title\"),\n        {\n          ref: triggerRef,\n          autoFocus,\n          disabled: !!isDisabled,\n          // Make sure this button is not interpreted as submit\n          type: \"button\",\n        }\n      ),\n    },\n  };\n\n  const plumeState: MenuButtonState = React.useMemo(\n    () => ({\n      open: () => state.open(),\n      close: () => state.close(),\n      isOpen: () => state.isOpen,\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    outerRef,\n    () => ({\n      getRoot: () => rootRef.current,\n      getTrigger: () => triggerRef.current,\n      focus: () => triggerRef.current && triggerRef.current.focus(),\n      blur: () => triggerRef.current && triggerRef.current.blur(),\n      open: plumeState.open,\n      close: plumeState.close,\n      isOpen: plumeState.isOpen,\n    }),\n    [rootRef, triggerRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n","import * as React from \"react\";\nimport type { ListState } from \"@react-stately/list\";\n\nexport const SelectContext = React.createContext<ListState<any> | undefined>(\n  undefined\n);\n","import { Placement } from \"@react-types/overlays\";\nimport { AriaSelectProps } from \"@react-types/select\";\nimport {\n  AriaLabelingProps,\n  DOMProps,\n  FocusableDOMProps,\n  FocusableProps,\n  InputBase,\n} from \"@react-types/shared\";\nimport * as React from \"react\";\nimport {\n  HiddenSelect,\n  useSelect as useAriaSelect,\n} from \"@react-aria/select\";\nimport {\n  useListBox\n} from \"@react-aria/listbox\";\nimport {\n  usePress\n} from \"@react-aria/interactions\";\nimport {\n  SelectState as AriaSelectState,\n  useSelectState as useAriaSelectState,\n} from \"@react-stately/select\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  getChildProp,\n  renderAsCollectionChild,\n  renderCollectionNode,\n  useDerivedItemsFromChildren,\n} from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport {\n  TriggeredOverlayContext,\n  TriggeredOverlayContextValue,\n} from \"../triggered-overlay/context\";\nimport { SelectContext } from \"./context\";\nimport { BaseSelectOptionProps } from \"./select-option\";\nimport { BaseSelectOptionGroupProps } from \"./select-option-group\";\n\nexport interface BaseSelectProps\n  extends DOMProps,\n    AriaLabelingProps,\n    FocusableDOMProps,\n    InputBase,\n    FocusableProps,\n    StyleProps {\n  /**\n   * Key of the currently selected value\n   */\n  value?: string | null;\n\n  /**\n   * Event handler fired when currently selected value changes\n   */\n  onChange?: (value: string | null) => void;\n\n  /**\n   * Uncontrolled key of the default selected value\n   */\n  defaultValue?: string;\n\n  /**\n   * List of Select.Options\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Whether the Select is currently open\n   */\n  isOpen?: boolean;\n\n  /**\n   * Event handler fired when Select's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /**\n   * Uncontrolled default open state\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Form name of the select element\n   */\n  name?: string;\n\n  /**\n   * By default, Select will render whatever is in Select.Option as the\n   * content in the trigger button when it is selected.  You can override\n   * what content by passing in `selectedContent` here.\n   */\n  selectedContent?: React.ReactNode;\n\n  /**\n   * Desired placement location of the Select dropdown\n   */\n  placement?: Placement;\n\n  /**\n   * If true, menu width will always match the trigger button width.\n   * If false, then menu width will have min-width matching the\n   * trigger button width.\n   */\n  menuMatchTriggerWidth?: boolean;\n\n  /**\n   * If set, menu width will be exactly this width, overriding\n   * menuMatchTriggerWidth.\n   */\n  menuWidth?: number;\n\n  /**\n   * Content to display when nothing is selected.\n   */\n  placeholder?: React.ReactNode;\n}\n\nconst COLLECTION_OPTS = {\n  itemPlumeType: \"select-option\",\n  sectionPlumeType: \"select-option-group\",\n};\n\ntype AriaOptionType = React.ReactElement<BaseSelectOptionProps>;\ntype AriaGroupType = React.ReactElement<BaseSelectOptionGroupProps>;\ntype AriaSelectItemType = AriaOptionType | AriaGroupType;\n\n/**\n * Converts props in our BaseSelectProps into props that react-aria's\n * useSelect() understands.\n *\n * Because we're not exposing the Collections API (see ./index.tsx),\n * we are converting our own API into props for useSelect.\n *\n * Specifically, in Plume's API,\n * - `children` flattens to a list of ReactElements of type Select.Option\n *   or Select.OptionGroup\n *\n * and we map it this way to the Collections API:\n * - `items` is a list of those flattened ReactElements from `children`!\n * - `children`, as a render prop, is supposed to take one of the `items`\n *   and return a `Section` or `Item` element. We take an Option/OptionGroup\n *   element, and use its props to render the appropriate `Section` or\n *   `Item`. The \"trick\" here is that we then stuff the Option element as\n *   `Item.children`, and the OptionGroup element as `Section.title`.\n *\n * When the Collections API does its work deriving `Node`s, the corresponding\n * Option/OptionGroup ReactElements will end up as `Node.rendered`.\n *\n * Then, when we are actually rendering the content of the dropdown, we\n * iterate through each collected `Node`, and renders\n * React.cloneElement(Node.rendered, {_node: node}).  This \"secretly\" passes\n * the derived collection `Node` as a prop to Option and OptionGroup, and they\n * can make use of the derived `Node.key` etc in their rendering functions.\n *\n * One thing to note here is that we never \"rendered\" the Option/OptionGroup\n * React elements that the user constructed; instead, we just looked at the\n * props used on those elements, and passed those onto the Collections API.\n * What gets rendered to the screen is the cloned version of these elements\n * with the secret derived `_node` prop.  That means Option and OptionGroup\n * render functions can assume that _node is passed in.\n */\nfunction useAriaSelectProps(props: BaseSelectProps) {\n  let {\n    value,\n    defaultValue,\n    children,\n    onChange,\n    placement,\n    menuMatchTriggerWidth,\n    menuWidth,\n    ...rest\n  } = props;\n\n  const { items, disabledKeys } = useDerivedItemsFromChildren(children, {\n    ...COLLECTION_OPTS,\n    invalidChildError: `Can only use Select.Option and Select.OptionGroup as children to Select`,\n    requireItemValue: true,\n  });\n\n  const collectionChildRenderer = React.useCallback(\n    (child) => renderAsCollectionChild(child, COLLECTION_OPTS),\n    []\n  );\n\n  const onSelectionChange = React.useMemo(() => {\n    if (onChange) {\n      return (val: string | null) =>\n        onChange!(\n          (val == null || val === \"null\" ? null : val) as string | null\n        );\n    } else {\n      return undefined;\n    }\n  }, [onChange]);\n\n  return {\n    ariaProps: {\n      ...rest,\n      children: collectionChildRenderer,\n      onSelectionChange,\n      items,\n      disabledKeys,\n      defaultSelectedKey: defaultValue,\n\n      // react-aria is picky about selectedKey; if it is null, it means \"no selection\";\n      // if it is undefined, it means \"uncontrolled\".  So here, if the user passes in a\n      // value prop, then we make sure selectedKey will be null and not undefined, so\n      // we don't accidentally enter uncontrolled mode.\n      ...(\"value\" in props && { selectedKey: value ?? null }),\n    } as AriaSelectProps<AriaSelectItemType>,\n  };\n}\n\nexport type SelectRef = React.Ref<SelectRefValue>;\n\nexport interface SelectRefValue extends SelectState {\n  getTrigger: () => HTMLElement | null;\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface SelectConfig<C extends AnyPlasmicClass> {\n  placeholderVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isOpenVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  triggerContentSlot: keyof PlasmicClassArgs<C>;\n  optionsSlot: keyof PlasmicClassArgs<C>;\n  placeholderSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  trigger: keyof PlasmicClassOverrides<C>;\n  overlay: keyof PlasmicClassOverrides<C>;\n  optionsContainer: keyof PlasmicClassOverrides<C>;\n}\n\ninterface SelectState {\n  open: () => void;\n  close: () => void;\n  isOpen: () => boolean;\n  getSelectedValue: () => string | null;\n  setSelectedValue: (value: string | null) => void;\n}\n\nexport function useSelect<P extends BaseSelectProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: SelectConfig<C>,\n  ref: React.Ref<SelectRefValue> = null\n) {\n  useEnsureSSRProvider();\n  const { ariaProps } = useAriaSelectProps(props);\n  const { placement } = props;\n  const state = useAriaSelectState<AriaSelectItemType>(ariaProps);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n\n  const {\n    isDisabled,\n    name,\n    menuWidth,\n    menuMatchTriggerWidth,\n    autoFocus,\n    placeholder,\n    selectedContent,\n  } = props;\n\n  const { triggerProps: triggerPressProps, menuProps } = useAriaSelect(\n    ariaProps,\n    state,\n    triggerRef\n  );\n\n  const { pressProps: triggerProps } = usePress({\n    ...triggerPressProps,\n    isDisabled,\n  });\n\n  const triggerContent = state.selectedItem\n    ? selectedContent ?? getChildProp(state.selectedItem.value, \"children\")\n    : null;\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isOpenVariant, active: state.isOpen },\n      { def: config.placeholderVariant, active: !state.selectedItem },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const triggerContext: TriggeredOverlayContextValue = React.useMemo(\n    () => ({\n      triggerRef,\n      state,\n      placement,\n      overlayMatchTriggerWidth: menuMatchTriggerWidth,\n      overlayMinTriggerWidth: true,\n      overlayWidth: menuWidth,\n    }),\n    [triggerRef, state, placement, menuMatchTriggerWidth, menuWidth]\n  );\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children) => (\n        <>\n          <HiddenSelect\n            state={state}\n            triggerRef={triggerRef}\n            name={name}\n            isDisabled={isDisabled}\n          />\n          {children}\n        </>\n      ),\n    },\n    [config.trigger]: {\n      props: mergeProps(triggerProps, {\n        ref: triggerRef,\n        autoFocus,\n        disabled: !!isDisabled,\n        // Don't trigger form submission!\n        type: \"button\",\n      }),\n    },\n    [config.overlay]: {\n      wrap: (content) => (\n        <TriggeredOverlayContext.Provider value={triggerContext}>\n          {content}\n        </TriggeredOverlayContext.Provider>\n      ),\n    },\n    [config.optionsContainer]: {\n      wrap: (content) => (\n        <ListBoxWrapper state={state} menuProps={menuProps}>\n          {content as React.ReactElement}\n        </ListBoxWrapper>\n      ),\n    },\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.triggerContentSlot]: triggerContent,\n    [config.placeholderSlot]: placeholder,\n    [config.optionsSlot]: (\n      <SelectContext.Provider value={state}>\n        {Array.from(state.collection).map((node) => renderCollectionNode(node))}\n      </SelectContext.Provider>\n    ),\n  };\n\n  const plumeState: SelectState = React.useMemo(\n    () => ({\n      open: () => state.open(),\n      close: () => state.close(),\n      isOpen: () => state.isOpen,\n      getSelectedValue: () =>\n        state.selectedKey ? `${state.selectedKey}` : null,\n      setSelectedValue: (key) => state.setSelectedKey(key as any),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      getTrigger: () => triggerRef.current,\n      focus: () => triggerRef.current?.focus(),\n      blur: () => triggerRef.current?.blur(),\n      open: () => plumeState.open(),\n      close: () => plumeState.close(),\n      isOpen: () => plumeState.isOpen(),\n      getSelectedValue: () => plumeState.getSelectedValue(),\n      setSelectedValue: (key) => plumeState.setSelectedValue(key),\n    }),\n    [rootRef, triggerRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n\nfunction ListBoxWrapper(props: {\n  state: AriaSelectState<any>;\n  menuProps: React.HTMLAttributes<Element>;\n  children: React.ReactElement;\n}) {\n  const { state, menuProps, children } = props;\n\n  const ref = React.useRef<HTMLElement>(null);\n\n  const { listBoxProps } = useListBox(\n    {\n      ...menuProps,\n      isVirtualized: false,\n      autoFocus: state.focusStrategy || true,\n      disallowEmptySelection: true,\n    },\n    state,\n    ref\n  );\n\n  return React.cloneElement(\n    children,\n    mergeProps(children.props, listBoxProps, { style: noOutline(), ref })\n  );\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useOption as useAriaOption } from \"@react-aria/listbox\";\nimport { pick } from \"../../common\";\nimport { mergeProps, mergeRefs } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { ItemLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { SelectContext } from \"./context\";\n\nexport interface BaseSelectOptionProps extends ItemLikeProps, StyleProps {}\n\ninterface SelectOptionConfig<C extends AnyPlasmicClass> {\n  isSelectedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  labelSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  labelContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport type SelectOptionRef = React.Ref<HTMLElement>;\n\nexport function useSelectOption<\n  P extends BaseSelectOptionProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: SelectOptionConfig<C>,\n  outerRef: SelectOptionRef = null\n) {\n  const state = React.useContext(SelectContext);\n\n  if (!state) {\n    // If no context, then we are being incorrectly used.  Complain or just don't\n    // bother installing any hooks.  It's okay to violate rules of hooks here\n    // because this instance won't suddenly be used correctly in another render.\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a Select.Option within a Select component.\"\n      );\n    }\n\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children } = props;\n\n  const rootRef = React.useRef<HTMLElement>(null);\n  const onRef = mergeRefs(rootRef, outerRef);\n\n  // We pass in the Node secretly as an undocumented prop from <Select />\n  const node = (props as any)._node as Node<\n    React.ReactElement<BaseSelectOptionProps>\n  >;\n\n  const isSelected = state.selectionManager.isSelected(node.key);\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isHighlighted =\n    state.selectionManager.isFocused &&\n    state.selectionManager.focusedKey === node.key;\n\n  const { optionProps, labelProps } = useAriaOption(\n    {\n      isSelected,\n      isDisabled,\n      \"aria-label\": node && node[\"aria-label\"],\n      key: node.key,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      isVirtualized: false,\n    },\n    state,\n    rootRef\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isSelectedVariant, active: isSelected },\n      { def: config.isDisabledVariant, active: isDisabled },\n      { def: config.isHighlightedVariant, active: isHighlighted }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.labelSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(optionProps, getStyleProps(props), {\n        ref: onRef,\n        style: noOutline(),\n      }),\n    },\n    [config.labelContainer]: {\n      props: labelProps,\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useListBoxSection } from \"@react-aria/listbox\";\nimport { useSeparator } from \"@react-aria/separator\";\nimport { pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport { renderCollectionNode, SectionLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { SelectContext } from \"./context\";\n\nexport interface BaseSelectOptionGroupProps\n  extends SectionLikeProps,\n    StyleProps {}\n\ninterface SelectOptionGroupConfig<C extends AnyPlasmicClass> {\n  noTitleVariant: PlasmicClassVariants<C>;\n  isFirstVariant: PlasmicClassVariants<C>;\n\n  optionsSlot: keyof PlasmicClassArgs<C>;\n  titleSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  separator: keyof PlasmicClassOverrides<C>;\n  titleContainer: keyof PlasmicClassOverrides<C>;\n  optionsContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useSelectOptionGroup<\n  P extends BaseSelectOptionGroupProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: SelectOptionGroupConfig<C>) {\n  const state = React.useContext(SelectContext);\n\n  // `node` should exist if the OptionGroup was instantiated properly\n  // within a Select\n  const node = (props as any)._node as\n    | Node<React.ReactElement<BaseSelectOptionGroupProps>>\n    | undefined;\n\n  if (!state || !node) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a Select.OptionGroup within a Select component.\"\n      );\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { headingProps, groupProps } = useListBoxSection({\n    heading: props.title,\n    \"aria-label\": props[\"aria-label\"],\n  });\n\n  const { separatorProps } = useSeparator({\n    elementType: \"li\",\n  });\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.noTitleVariant, active: !props.title },\n      {\n        def: config.isFirstVariant,\n        active: state.collection.getFirstKey() === node.key,\n      }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.titleSlot]: props.title,\n    [config.optionsSlot]: Array.from(node.childNodes).map((childNode) =>\n      renderCollectionNode(childNode)\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: getStyleProps(props),\n    },\n    [config.separator]: {\n      props: {\n        ...separatorProps,\n      },\n    },\n    [config.titleContainer]: {\n      props: {\n        role: \"presentation\",\n        ...headingProps,\n      },\n      ...(!props.title && {\n        render: () => null,\n      }),\n    },\n    [config.optionsContainer]: {\n      props: {\n        ...groupProps,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { AriaSwitchProps } from \"@react-types/switch\";\nimport * as React from \"react\";\nimport { useSwitch as useAriaSwitch } from \"@react-aria/switch\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\n\nexport type SwitchRef = React.Ref<SwitchRefValue>;\nexport interface SwitchRefValue extends SwitchState {\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface SwitchState {\n  setChecked: (checked: boolean) => void;\n}\n\nexport interface SwitchProps\n  extends Omit<AriaSwitchProps, \"isSelected\" | \"defaultSelected\">,\n    StyleProps {\n  /**\n   * Whether the Switch is checked or not; controlled\n   */\n  isChecked?: boolean;\n\n  /**\n   * Whether the Switch is checked by default; uncontrolled\n   */\n  defaultChecked?: boolean;\n}\n\nfunction asAriaSwitchProps(props: SwitchProps) {\n  const ariaProps = {\n    ...props,\n    isSelected: props.isChecked,\n    defaultSelected: props.defaultChecked,\n  };\n  delete ariaProps[\"isChecked\"];\n  delete ariaProps[\"defaultChecked\"];\n  return ariaProps;\n}\n\ninterface SwitchConfig<C extends AnyPlasmicClass> {\n  isCheckedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  noLabelVariant?: VariantDef<PlasmicClassVariants<C>>;\n  labelSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useSwitch<P extends SwitchProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: SwitchConfig<C>,\n  ref: SwitchRef = null\n) {\n  const { children, isDisabled } = props;\n  useEnsureSSRProvider();\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n  const ariaProps = asAriaSwitchProps(props);\n  const state = useToggleState(ariaProps);\n  const { inputProps } = useAriaSwitch(ariaProps, state, inputRef);\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      {\n        def: config.isDisabledVariant,\n        active: isDisabled,\n      },\n      {\n        def: config.isCheckedVariant,\n        active: state.isSelected,\n      },\n      {\n        def: config.noLabelVariant,\n        active: !children,\n      }\n    ),\n  };\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"label\",\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children) => (\n        <>\n          <VisuallyHidden isFocusable>\n            <input {...inputProps} ref={inputRef} />\n          </VisuallyHidden>\n          {children}\n        </>\n      ),\n    },\n  };\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.labelSlot ? { [config.labelSlot]: children } : {}),\n  };\n\n  const plumeState: SwitchState = React.useMemo(\n    () => ({\n      setChecked: (checked: boolean) => state.setSelected(checked),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      setChecked: (checked) => plumeState.setChecked(checked),\n    }),\n    [rootRef, inputRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n      args: args as PlasmicClassArgs<C>,\n    },\n    state: plumeState,\n  };\n}\n","import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\nexport interface BaseTextInputProps\n  extends Omit<React.ComponentProps<\"input\">, \"type\" | \"disabled\"> {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  isDisabled?: boolean;\n  type?: \"text\" | \"password\" | \"email\" | \"url\" | string;\n  inputClassName?: string;\n  inputStyle?: React.CSSProperties;\n}\n\nexport interface TextInputRefValue {\n  focus: () => void;\n  blur: () => void;\n  getRoot: () => HTMLElement | null;\n  getInput: () => HTMLInputElement | null;\n}\n\nexport type TextInputRef = React.Ref<TextInputRefValue>;\n\ninterface TextInputConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  input: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useTextInput<\n  P extends BaseTextInputProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TextInputConfig<C>,\n  ref: TextInputRef = null\n) {\n  const {\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    className,\n    style,\n    inputClassName,\n    inputStyle,\n    ...rest\n  } = props;\n  const rootRef = React.useRef<HTMLElement>(null);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      focus() {\n        inputRef.current?.focus();\n      },\n      blur() {\n        inputRef.current?.blur();\n      },\n      getRoot() {\n        return rootRef.current;\n      },\n      getInput() {\n        return inputRef.current;\n      },\n    }),\n    [rootRef, inputRef]\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: {\n        ref: rootRef,\n        className,\n        style,\n      },\n    },\n    [config.input]: {\n      props: {\n        ...omit(\n          rest as any,\n          // We need to remove `required` from the list of internalArgProps to\n          // be omitted in the props being passed through because Plume pkg\n          // <= 19.1.1 had a bug: input[required] was not linked to the\n          // `required` arg as it should.\n          ...plasmicClass.internalArgProps.filter(\n            (prop) => prop !== \"required\"\n          ),\n          ...plasmicClass.internalVariantProps\n        ),\n        disabled: isDisabled,\n        ref: inputRef,\n        className: inputClassName,\n        style: inputStyle,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { DOMProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport {\n  DismissButton,\n  useOverlay,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\nimport { FocusScope } from \"@react-aria/focus\";\nimport * as ReactDOM from \"react-dom\";\nimport { pick } from \"../../common\";\nimport {\n  mergeProps,\n  mergeRefs,\n  useIsomorphicLayoutEffect,\n} from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"./context\";\n\nexport interface BaseTriggeredOverlayProps extends StyleProps, DOMProps {\n  children?: React.ReactNode;\n}\n\nexport interface TriggeredOverlayConfig<C extends AnyPlasmicClass> {\n  isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  contentContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport type TriggeredOverlayRef = React.Ref<HTMLElement>;\n\nexport function useTriggeredOverlay<\n  P extends BaseTriggeredOverlayProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TriggeredOverlayConfig<C>,\n  outerRef: TriggeredOverlayRef = null,\n  isDismissable = true\n) {\n  const overlayRef = React.useRef<HTMLElement>(null);\n  const onOverlayRef = mergeRefs(overlayRef, outerRef);\n\n  const context = React.useContext(TriggeredOverlayContext);\n\n  if (!context) {\n    // If no context, then we are not being correctly used.  Either complain, or\n    // exit early.  It's okay to exit early and break the rules of React hooks\n    // because we won't suddenly have the appropriate context anyway for this instance.\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a triggered overlay with a TriggeredOverlayContext\"\n      );\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children } = props;\n  const {\n    triggerRef,\n    placement,\n    overlayMatchTriggerWidth,\n    overlayMinTriggerWidth,\n    overlayWidth,\n    state,\n  } = context;\n\n  // Measure the width of the trigger to inform the width of the menu (below).\n  const [isRendered, setRendered] = React.useState(false);\n  const triggerWidth =\n    triggerRef.current && (overlayMatchTriggerWidth || overlayMinTriggerWidth)\n      ? triggerRef.current.offsetWidth\n      : undefined;\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      !isRendered &&\n      triggerRef.current &&\n      (overlayMatchTriggerWidth || overlayMinTriggerWidth)\n    ) {\n      setRendered(true);\n    }\n  }, [\n    triggerRef,\n    isRendered,\n    overlayMatchTriggerWidth,\n    overlayMinTriggerWidth,\n  ]);\n\n  const { overlayProps: overlayAriaProps } = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      isDismissable,\n      shouldCloseOnBlur: true,\n    },\n    overlayRef\n  );\n\n  const {\n    overlayProps: overlayPositionProps,\n    updatePosition,\n    placement: placementAxis,\n  } = useOverlayPosition({\n    targetRef: triggerRef,\n    overlayRef,\n    placement: placement ?? \"bottom left\",\n    shouldFlip: true,\n    isOpen: state.isOpen,\n    onClose: state.close,\n    containerPadding: 0,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        updatePosition();\n      });\n    }\n  }, [state.isOpen, updatePosition]);\n\n  const overlayProps = mergeProps(\n    {\n      style: {\n        left: \"auto\",\n        right: \"auto\",\n        top: \"auto\",\n        bottom: \"auto\",\n        position: \"absolute\",\n        width:\n          overlayWidth ?? (overlayMatchTriggerWidth ? triggerWidth : \"auto\"),\n        minWidth: overlayMinTriggerWidth ? triggerWidth : \"auto\",\n      },\n    },\n    overlayAriaProps,\n    overlayPositionProps\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isPlacedTopVariant, active: placementAxis === \"top\" },\n      { def: config.isPlacedBottomVariant, active: placementAxis === \"bottom\" },\n      { def: config.isPlacedLeftVariant, active: placementAxis === \"left\" },\n      { def: config.isPlacedRightVariant, active: placementAxis === \"right\" }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.contentSlot]: (\n      <FocusScope restoreFocus>\n        <DismissButton onDismiss={state.close} />\n        {children}\n        {/* We don't use the DismissButton at the end because it ends up taking up 1px space :-/ */}\n        {/* <DismissButton onDismiss={state.close} /> */}\n      </FocusScope>\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(overlayProps, getStyleProps(props), {\n        ref: onOverlayRef,\n      }),\n      wrap: (root) => {\n        if (typeof document !== \"undefined\") {\n          return ReactDOM.createPortal(root, document.body);\n        } else {\n          // Possibly being invoked on the server during SSR; no need to\n          // bother with a portal in that case.\n          return root;\n        }\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import get from \"dlv\";\nimport { $State } from \".\";\n\nexport function generateStateOnChangeProp(\n  $state: $State,\n  stateName: string,\n  dataReps: number[]\n): (val: any, path: (string | number)[]) => void {\n  return (val, path) => set($state, [stateName, ...dataReps, ...path], val);\n}\n\n/**\n * This function generate the state value prop for repeated states\n * Example:\n *   - parent[][].counter[].count\n * We need to pass `parent[index1][index2].counter to the child component\n */\nexport function generateStateValueProp(\n  $state: $State,\n  path: (string | number)[] // [\"parent\", 0, 1, \"counter\"]\n) {\n  return get($state, path);\n}\n\n/**\n * Forked from https://github.com/lukeed/dset\n * Changes: fixed setting a deep value to a proxy object\n */\nexport function set(obj: any, keys: any, val: any) {\n  keys = keys.split ? keys.split(\".\") : keys;\n  var i = 0,\n    l = keys.length,\n    t = obj,\n    x,\n    k;\n  while (i < l) {\n    k = keys[i++];\n    if (k === \"__proto__\" || k === \"constructor\" || k === \"prototype\") break;\n    if (i === l) {\n      t[k] = val;\n      t = t[k];\n    } else {\n      if (typeof (x = t[k]) === typeof keys) {\n        t = t[k] = x;\n      } else if (keys[i] * 0 !== 0 || !!~(\"\" + keys[i]).indexOf(\".\")) {\n        t[k] = {};\n        t = t[k];\n      } else {\n        t[k] = [];\n        t = t[k];\n      }\n    }\n  }\n}\n","import get from \"dlv\";\nimport deepEqual from \"fast-deep-equal\";\nimport React from \"react\";\nimport { proxy as createValtioProxy, ref, useSnapshot } from \"valtio\";\nimport { subscribeKey } from \"valtio/utils\";\nimport { set } from \"./helpers\";\n\nconst mkUntrackedValue = (o: any) => (typeof o === \"object\" ? ref(o) : o);\n\ntype InitFunc<T> = (\n  $props: Record<string, any>,\n  $state: $State,\n  indexes: number[]\n) => T;\ntype ObjectPath = (string | number)[];\n\nexport interface $State {\n  [key: string]: any;\n  registerInitFunc?: (path: string, f: InitFunc<any>) => any;\n}\n\ninterface Internal$StateSpec<T> extends $StateSpec<T> {\n  isRepeated: boolean;\n  pathObj: ObjectPath;\n}\n\ninterface Internal$StateInstance {\n  path: ObjectPath; // [\"counter\", 0, \"count\"]\n  specKey: string;\n}\n\nexport interface $StateSpec<T> {\n  // path of the state, like `count` or `list.selectedIndex`\n  path: string;\n  // if initial value is defined by a js expression\n  initFunc?: InitFunc<T>;\n  // if initial value is a hard-coded value\n  initVal?: T;\n  // Whether this state is private, readonly, or writable in\n  // this component\n  type: \"private\" | \"readonly\" | \"writable\";\n\n  // If writable, there should be a valueProp that maps props[valueProp]\n  // to the value of the state\n  valueProp?: string;\n\n  // If writable or readonly, there should be an onChangeProp where\n  // props[onChangeProp] is invoked whenever the value changes\n  onChangeProp?: string;\n}\n\ninterface Internal$State {\n  stateValues: Record<string, any>;\n  initStateValues: Record<string, any>;\n  unsubscriptionsByState: Record<string, (() => void)[]>;\n  specsByKey: Record<string, Internal$StateSpec<any>>;\n  statesInstanceBySpec: Map<string, Internal$StateInstance[]>;\n  existingStates: Map<string, Internal$StateInstance>;\n  registrationsQueue: { pathStr: string; f: InitFunc<any> }[];\n  props: any;\n}\n\nconst transformPathStringToObj = (str: string) => {\n  const splitStatePathPart = (state: string): string[] =>\n    state.endsWith(\"[]\")\n      ? [...splitStatePathPart(state.slice(0, -2)), \"[]\"]\n      : [state];\n  return str.split(\".\").flatMap(splitStatePathPart);\n};\n\nfunction shallowEqual<T>(a1: T[], a2: T[]) {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\nfunction saveNewState<T>(\n  $$state: Internal$State,\n  path: ObjectPath,\n  spec: Internal$StateSpec<T>\n) {\n  const key = JSON.stringify(path);\n  $$state.existingStates.set(key, { path, specKey: spec.path });\n  if (!$$state.statesInstanceBySpec.has(spec.path)) {\n    $$state.statesInstanceBySpec.set(spec.path, []);\n  }\n  $$state.statesInstanceBySpec\n    .get(spec.path)!\n    .push({ path, specKey: spec.path });\n}\n\nfunction create$StateProxy(\n  $$state: Internal$State,\n  handlers: (\n    path: ObjectPath,\n    spec: Internal$StateSpec<any>\n  ) => ProxyHandler<any>\n) {\n  const getNextKeyToSpecMap = (currPath: ObjectPath) =>\n    new Map(\n      Object.entries(\n        Object.values($$state.specsByKey)\n          .filter((spec) =>\n            shallowEqual(\n              currPath.map((p) => (isNum(p) ? \"[]\" : p)),\n              spec.pathObj.slice(0, currPath.length)\n            )\n          )\n          .reduce((agg, spec) => {\n            const nextKey = spec.pathObj[currPath.length];\n            if (!(nextKey in agg)) {\n              agg[nextKey] = [];\n            }\n            agg[nextKey].push(spec);\n            return agg;\n          }, {} as Record<string, Internal$StateSpec<any>[]>)\n      )\n    );\n  const rec = (currPath: ObjectPath) => {\n    const nextKeyToSpecs = getNextKeyToSpecMap(currPath);\n    const getSpecForProperty = (property: string | number | symbol) => {\n      return nextKeyToSpecs.has(\"[]\") && isNum(property)\n        ? nextKeyToSpecs.get(\"[]\")?.[0]\n        : typeof property === \"string\" && nextKeyToSpecs.has(property)\n        ? nextKeyToSpecs.get(property)?.[0]\n        : undefined;\n    };\n    const getNextPath = (property: string | number | symbol) => [\n      ...currPath,\n      isNum(property) ? +property : (property as string),\n    ];\n\n    return new Proxy(nextKeyToSpecs.has(\"[]\") ? ([] as any) : ({} as any), {\n      deleteProperty(target, property) {\n        const prefixPath = getNextPath(property);\n        const specKeysToUpdate = new Set<string>();\n        $$state.existingStates.forEach(({ path, specKey }) => {\n          if (\n            path.length >= prefixPath.length &&\n            shallowEqual(path.slice(0, prefixPath.length), prefixPath)\n          ) {\n            deleteState($$state, path);\n            specKeysToUpdate.add(specKey);\n          }\n        });\n        specKeysToUpdate.forEach((specKey) => {\n          const spec = $$state.specsByKey[specKey];\n          if (spec.onChangeProp) {\n            $$state.props[spec.onChangeProp]?.(\n              get($$state.stateValues, currPath),\n              currPath\n            );\n          }\n        });\n        return Reflect.deleteProperty(target, property);\n      },\n      get(target, property, receiver) {\n        const spec = getSpecForProperty(property);\n        if (spec && typeof property !== \"symbol\") {\n          const nextPath = getNextPath(property);\n          if (spec.pathObj.length === currPath.length + 1) {\n            // reached the end of the spec\n            target[property] = handlers(nextPath, spec).get?.(\n              target,\n              property,\n              receiver\n            );\n          } else if (!(property in target)) {\n            target[property] = rec(nextPath);\n          }\n        }\n        return Reflect.get(target, property, receiver);\n      },\n      set(target, property, value, receiver) {\n        const spec = getSpecForProperty(property);\n        const nextPath = getNextPath(property);\n        if (spec && typeof property !== \"symbol\") {\n          if (spec.pathObj.length === currPath.length + 1) {\n            // reached the end of the spec\n            target[property] = handlers(nextPath, spec).set?.(\n              target,\n              property,\n              value,\n              receiver\n            );\n            return Reflect.set(target, property, value, receiver);\n          } else if (typeof value === \"object\") {\n            target[property] = rec(nextPath);\n            for (const key of Object.keys(value)) {\n              target[property][key] = value[key];\n            }\n            return true;\n          }\n        }\n        if (property === \"registerInitFunc\" && currPath.length === 0) {\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (nextKeyToSpecs.has(\"[]\")) {\n          set($$state.stateValues, nextPath, value);\n          nextKeyToSpecs.get(\"[]\")?.forEach((spec) => {\n            if (spec?.onChangeProp) {\n              $$state.props[spec.onChangeProp]?.(value, nextPath);\n            }\n          });\n          return Reflect.set(target, property, value, receiver);\n        }\n        // invalid setting a value that doesn't make part of the spec\n        return false;\n      },\n    });\n  };\n\n  return rec([]);\n}\n\nconst deleteState = ($$state: Internal$State, path: ObjectPath) => {\n  const key = JSON.stringify(path);\n  $$state.unsubscriptionsByState[key]?.forEach((f: any) => f());\n  delete $$state.unsubscriptionsByState[key];\n  $$state.existingStates.delete(key);\n\n  // delete get($$state.stateValues, path.slice(-1))[path.slice(-1)[0]];\n  // delete get($$state.initStateValues, path.slice(-1))[path.slice(-1)[0]];\n};\n\nconst getIndexes = (path: ObjectPath, spec: Internal$StateSpec<any>) => {\n  const indexes = [];\n  if (path.length !== spec.pathObj.length) {\n    throw new Error(\n      \"Unexpected error: state path and spec path have different lengths\"\n    );\n  }\n  for (let i = 0; i < spec.pathObj.length; i++) {\n    if (spec.pathObj[i] === \"[]\") {\n      indexes.push(path[i] as number);\n    }\n  }\n  return indexes;\n};\n\nfunction initializeStateValue(\n  $$state: Internal$State,\n  initialStatePath: ObjectPath,\n  initialSpec: Internal$StateSpec<any>\n) {\n  const initialStateKey = JSON.stringify(initialStatePath);\n  const stateAccess: Set<{\n    path: ObjectPath;\n    spec: Internal$StateSpec<any>;\n  }> = new Set();\n  const $state = create$StateProxy($$state, (path, spec) => ({\n    get() {\n      const key = JSON.stringify(path);\n      stateAccess.add({ path, spec });\n      if (spec.valueProp) {\n        return !spec.isRepeated\n          ? $$state.props[spec.valueProp]\n          : get($$state.props[spec.valueProp], path.slice(1));\n      }\n      if ($$state.existingStates.has(key)) {\n        // is already initialized\n        return get($$state.stateValues, path);\n      } else if (spec.initFunc) {\n        initializeStateValue($$state, path, spec);\n      }\n      return get($$state.stateValues, path);\n    },\n    set() {\n      throw new Error(`Cannot update state values during initialization`);\n    },\n  }));\n\n  $$state.unsubscriptionsByState[initialStateKey]?.forEach((f: any) => f());\n  $$state.unsubscriptionsByState[initialStateKey] = [];\n  stateAccess.forEach(({ path, spec }) => {\n    const unsubscribe = subscribeKey(\n      get($$state.stateValues, path.slice(-1)),\n      path.slice(-1)[0],\n      () =>\n        set(\n          $$state.stateValues,\n          initialStatePath,\n          mkUntrackedValue(\n            initialSpec.initFunc!($$state.props, $state, getIndexes(path, spec))\n          )\n        )\n    );\n    $$state.unsubscriptionsByState[initialStateKey].push(unsubscribe);\n  });\n\n  const untrackedInitialValue = mkUntrackedValue(\n    initialSpec.initFunc!(\n      $$state.props,\n      $state,\n      getIndexes(initialStatePath, initialSpec)\n    )\n  );\n  set($$state.initStateValues, initialStatePath, untrackedInitialValue);\n  set($$state.stateValues, initialStatePath, untrackedInitialValue);\n  return untrackedInitialValue;\n}\n\nexport function useDollarState(\n  specs: $StateSpec<any>[],\n  props: Record<string, any>\n) {\n  const $$state = React.useRef(\n    createValtioProxy<Internal$State>({\n      stateValues: {},\n      initStateValues: {},\n      specsByKey: Object.fromEntries(\n        specs.map((spec) => [\n          spec.path,\n          {\n            ...spec,\n            pathObj: transformPathStringToObj(spec.path),\n            isRepeated: spec.path\n              .split(\".\")\n              .some((part) => part.endsWith(\"[]\")),\n          },\n        ])\n      ),\n      statesInstanceBySpec: new Map<string, Internal$StateInstance[]>(),\n      existingStates: new Map<string, Internal$StateInstance>(),\n      unsubscriptionsByState: {},\n      props: undefined,\n      registrationsQueue: [],\n    })\n  ).current;\n  $$state.props = mkUntrackedValue(props);\n\n  const $state = React.useRef(\n    Object.assign(\n      create$StateProxy($$state, (path, spec) => {\n        const key = JSON.stringify(path);\n        if (!$$state.existingStates.has(key)) {\n          saveNewState($$state, path, spec);\n          const untrackedValue = !spec.initFunc\n            ? mkUntrackedValue(spec.initVal ?? undefined)\n            : initializeStateValue($$state, path, spec);\n          set($$state.stateValues, path, untrackedValue);\n          set($$state.initStateValues, path, untrackedValue);\n        }\n        return {\n          get() {\n            if (spec.valueProp) {\n              const value = !spec.isRepeated\n                ? $$state.props[spec.valueProp]\n                : get($$state.props[spec.valueProp], path.slice(1));\n              return value;\n            } else {\n              return get($$state.stateValues, path);\n            }\n          },\n          set(_t, _p, value) {\n            set($$state.stateValues, path, mkUntrackedValue(value));\n            if (spec.onChangeProp) {\n              $$state.props[spec.onChangeProp]?.(value, path);\n            }\n            return true;\n          },\n        };\n      }),\n      {\n        registerInitFunc: function <T>(pathStr: string, f: InitFunc<T>) {\n          if (\n            $$state.statesInstanceBySpec\n              .get(pathStr)\n              ?.some(\n                ({ path, specKey }) =>\n                  !deepEqual(\n                    get($$state.initStateValues, path),\n                    f(\n                      props,\n                      $state,\n                      getIndexes(path, $$state.specsByKey[specKey])\n                    )\n                  )\n              )\n          ) {\n            $$state.registrationsQueue.push({ pathStr, f });\n          }\n        },\n      }\n    )\n  ).current;\n\n  // For each spec with an initFunc, evaluate it and see if\n  // the init value has changed. If so, reset its state.\n  const resetSpecs: { path: ObjectPath; spec: Internal$StateSpec<any> }[] = [];\n  $$state.existingStates.forEach(({ path, specKey }) => {\n    const spec = $$state.specsByKey[specKey];\n    if (spec.initFunc) {\n      const newInit = spec.initFunc(props, $state, getIndexes(path, spec));\n      if (!deepEqual(newInit, get($$state.initStateValues, path))) {\n        resetSpecs.push({ path, spec });\n      }\n    }\n  });\n  React.useLayoutEffect(() => {\n    resetSpecs.forEach(({ path, spec }) => {\n      const newInit = initializeStateValue($$state, path, spec);\n      if (spec.onChangeProp) {\n        $$state.props[spec.onChangeProp]?.(newInit, path);\n      }\n    });\n  }, [props, resetSpecs]);\n  React.useLayoutEffect(() => {\n    $$state.registrationsQueue.forEach(({ f, pathStr }) => {\n      $$state.specsByKey[pathStr].initFunc = f;\n    });\n    $$state.registrationsQueue = [];\n  }, [$$state.registrationsQueue]);\n\n  // Re-render if any value changed in one of these objects\n  useSnapshot($$state.stateValues, { sync: true });\n  useSnapshot($$state.specsByKey, { sync: true });\n\n  return $state;\n}\n\nexport default useDollarState;\n\n// Simple version of $state useDollarState for read-only\nexport function useCanvasDollarState(\n  specs: $StateSpec<any>[],\n  props: Record<string, any>\n) {\n  const $$state = createValtioProxy<Internal$State>({\n    stateValues: {},\n    initStateValues: {},\n    specsByKey: Object.fromEntries(\n      specs.map((spec) => [\n        spec.path,\n        {\n          ...spec,\n          pathObj: transformPathStringToObj(spec.path),\n          isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n        },\n      ])\n    ),\n    statesInstanceBySpec: new Map<string, Internal$StateInstance[]>(),\n    existingStates: new Map<string, Internal$StateInstance>(),\n    unsubscriptionsByState: {},\n    props: undefined,\n    registrationsQueue: [],\n  });\n  $$state.props = mkUntrackedValue(props);\n\n  const $state = create$StateProxy($$state, (path, spec) => {\n    return {\n      get() {\n        return get($$state.stateValues, path);\n      },\n      set(_t, _p, value) {\n        set($$state.stateValues, path, mkUntrackedValue(value));\n        if (spec.onChangeProp) {\n          $$state.props[spec.onChangeProp]?.(value, path);\n        }\n        return true;\n      },\n    };\n  });\n  for (const spec of specs) {\n    const path = transformPathStringToObj(spec.path);\n    const init = spec.valueProp\n      ? $$state.props[spec.valueProp]\n      : spec.initVal\n      ? spec.initVal\n      : spec.initFunc\n      ? initializeStateValue($$state, path, $$state.specsByKey[spec.path])\n      : undefined;\n    set($state, path, init);\n  }\n  return $state;\n}\n"],"names":["notNil","x","pick","obj","Object","keys","length","res","key","pickBy","func","entries","val","omit","includes","isSubset","a1","a2","every","chainSingleArgFuncs","funcs","undefined","arg","isString","groupBy","collection","keyFunc","result","push","mapValues","mapper","isBrowser","window","NONE","Symbol","useIsomorphicLayoutEffect","React","useLayoutEffect","useEffect","createElementWithChildren","elementType","props","children","Array","isArray","createElement","ensureNotArray","Fragment","toChildArray","isReactChild","flatMap","isReactText","child","isValidElement","isReactNode","mergeProps","restProps","rest","mergePropVals","updateRef","ref","value","isFrozen","current","mergeRefs","refs","name","val1","val2","classNames","startsWith","getElementTypeName","element","type","comp","displayName","render","renderStack","as","hasGap","wrappedChildren","wrapFlexContainerChildren","FlexStack_","outerRef","FlexStack","makeStackImpl","Stack","assign","div","a","button","h1","h2","h3","h4","h5","h6","label","form","section","head","main","nav","hasVariant","variants","groupName","variant","groupVariants","className","createPlasmicElement","override","defaultRoot","defaultProps","wrapChildrenInFlex","override2","deriveOverride","mergeOverrideProps","root","wrapChildren","wrap","seenElements","Map","createPlasmicElementProxy","defaultElement","isRoot","forNodeName","createPlasmicElementFromJsx","set","forNode","get","clear","wrapFlexChild","triggerProps","makeFragment","UNSET","defaults","overrides","defaultVal","overrideVal","wrapWithClassName","style","display","Error","mergeVariants","v1","v2","mergeVariantsWithStates","$state","linkedStates","fromEntries","map","variantGroup","statePath","mergeArgs","mergeFlexOverrides","o1","o2","from","Set","merged","mergeFlexOverride","fo1","fo2","filter","deriveRenderOpts","config","descendantNames","internalVariantPropNames","internalArgPropNames","reservedPropNames","args","leftoverProps","isDefaultValue","seenDefaultVariants","ensureGlobalVariants","globalVariantValues","forEach","process","env","NODE_ENV","providerName","toUpperCase","substring","console","warn","PlasmicHeadContext","PlasmicHead","Head","image","content","property","title","description","canonical","href","plasmicHeadMeta","importName","importPath","isRepeatable","styleSections","PlasmicIcon","PlasmicIconType","IMG_SIZES","DEVICE_SIZES","ALL_SIZES","PlasmicImg","forwardRef","src","displayWidth","displayHeight","displayMinWidth","displayMinHeight","displayMaxWidth","displayMaxHeight","quality","loader","imgRef","loading","imgProps","fullWidth","fullHeight","aspectRatio","srcStr","isSvg","computedDisplayWidth","getPixelLength","spacerWidth","spacerHeight","isFinite","DEFAULT_SVG_WIDTH","Math","round","getWidths","minWidth","sizes","widthDescs","imageLoader","getImageLoader","spacerSvg","spacerSvgBase64","Buffer","toString","btoa","wrapperStyle","spacerStyle","width","maxWidth","height","minHeight","maxHeight","alt","makePicture","opts","supportsUrl","srcSet","wd","transformUrl","format","desc","join","decoding","endsWith","getClosestPresetSize","nextBiggerIndex","findIndex","w","nextBigger","extra","pixelWidth","pixelMinWidth","max","usefulSizes","size","parsed","parseNumeric","units","num","match","PLASMIC_IMAGE_LOADER","params","PlasmicLink","platform","nextjsProps","component","isInternalHref","to","test","PlasmicTranslatorContext","createContext","isIterable","iterator","genTranslatableString","elt","components","componentsCount","getText","node","nodeChildren","hasKey","contents","Children","toArray","componentId","cloneElement","str","Trans","_t","useContext","warnNoTranslationFunctionAtMostOnce","hasWarned","v","PlasmicSlot","renderPlasmicSlot","defaultContents","maybeString","maybeAsString","nonEmptyProps","p","listeners","queries","matchScreenVariants","query","matchMedia","matches","curScreenVariants","recalculateScreenVariants","screenVariant","ReactDOM","unstable_batchedUpdates","listener","ensureInitCurScreenVariants","addEventListener","createUseScreenVariants","isMulti","screenQueries","updateState","lastScreenVariantsRef","updateIfChanged","splice","indexOf","PlasmicRootContext","PlasmicRootProvider","userAuthToken","context","dataSourceContextValue","Provider","SSRProvider","PlasmicDataSourceContextProvider","translator","useIsSSR","useAriaIsSSR","useHasPlasmicRoot","hasWarnedSSR","useEnsureSSRProvider","hasRoot","useFocused","useAriaFocusRing","within","isTextInput","isFocused","focusProps","useFocusVisible","isFocusVisible","useFocusedWithin","useFocusVisibleWithin","useHover","isHover","setHover","onMouseEnter","onMouseLeave","usePressed","isPressed","setPressed","onMouseDown","onMouseUp","TRIGGER_TO_HOOK","useTrigger","trigger","_classNames","PLUME_STRICT_MODE","setPlumeStrictMode","mode","mergeVariantToggles","toggles","definedToggles","def","grouped","group","subToggles","active","noOutline","outline","getPlumeType","childType","__plumeType","useButton","plasmicClass","link","isDisabled","startIcon","endIcon","showStartIcon","showEndIcon","internalVariantProps","showStartIconVariant","showEndIconVariant","isDisabledVariant","internalArgProps","startIconSlot","endIconSlot","contentSlot","disabled","plasmicProps","getStyleProps","getDefaultPlasmicProps","RE_DATA_PROP","getDataProps","k","asAriaCheckboxProps","ariaProps","isSelected","isChecked","defaultSelected","defaultChecked","useCheckbox","isIndeterminate","inputRef","rootRef","state","useToggleState","useAriaCheckbox","inputProps","isCheckedVariant","isIndeterminateVariant","noLabelVariant","VisuallyHidden","isFocusable","labelSlot","plumeState","setChecked","checked","setSelected","getRoot","focus","blur","deriveItemsFromChildren","items","disabledKeys","itemPlumeType","sectionPlumeType","invalidChildError","itemCount","sectionCount","ensureValue","propInChild","requireItemValue","cloneChild","flattenedChildren","childKey","getItemLikeKey","getChildProp","useDerivedItemsFromChildren","useMemo","renderCollectionNode","rendered","_node","renderAsCollectionChild","plumeType","option","Item","textValue","Section","c","prop","componentProps","TriggeredOverlayContext","MenuContext","COLLECTION_OPTS","asAriaMenuProps","collectionChildRenderer","useMenu","triggerContext","useTreeState","menuListRef","useAriaMenu","autoFocus","menuProps","contextValue","itemsContainer","itemsSlot","getFocusedValue","selectionManager","focusedKey","setFocusedValue","setFocusedKey","useMenuGroup","useMenuSection","heading","headingProps","groupProps","useSeparator","separatorProps","noTitleVariant","isFirstVariant","getFirstKey","titleSlot","childNodes","childNode","separator","titleContainer","role","useMenuItem","menuContext","onAction","has","isHighlighted","useAriaMenuItem","onClose","close","isVirtualized","closeOnSelect","menuItemProps","labelProps","isHighlightedVariant","labelContainer","useMenuTrigger","triggerRef","placement","menuMatchTriggerWidth","menuWidth","menu","useAriaMenuTrigger","triggerPressProps","menuTriggerProps","usePress","pressProps","makeMenu","realMenu","focusStrategy","overlayMatchTriggerWidth","overlayMinTriggerWidth","overlayWidth","DropdownMenu","isOpen","defaultOpen","onOpenChange","useMenuTriggerState","shouldFlip","useMenuButton","useFocusable","triggerFocusProps","focusableProps","isOpenVariant","menuSlot","open","getTrigger","SelectContext","useAriaSelectProps","defaultValue","onChange","onSelectionChange","defaultSelectedKey","selectedKey","useSelect","useAriaSelectState","placeholder","selectedContent","useAriaSelect","triggerContent","selectedItem","placeholderVariant","HiddenSelect","overlay","optionsContainer","ListBoxWrapper","triggerContentSlot","placeholderSlot","optionsSlot","getSelectedValue","setSelectedValue","setSelectedKey","useListBox","disallowEmptySelection","listBoxProps","useSelectOption","onRef","useAriaOption","shouldSelectOnPressUp","shouldFocusOnHover","optionProps","isSelectedVariant","useSelectOptionGroup","useListBoxSection","asAriaSwitchProps","useSwitch","useAriaSwitch","useTextInput","inputClassName","inputStyle","getInput","input","useTriggeredOverlay","isDismissable","overlayRef","onOverlayRef","isRendered","setRendered","triggerWidth","offsetWidth","useOverlay","shouldCloseOnBlur","overlayAriaProps","overlayProps","useOverlayPosition","targetRef","containerPadding","overlayPositionProps","updatePosition","placementAxis","requestAnimationFrame","left","right","top","bottom","position","isPlacedTopVariant","isPlacedBottomVariant","isPlacedLeftVariant","isPlacedRightVariant","FocusScope","restoreFocus","DismissButton","onDismiss","document","body","generateStateOnChangeProp","stateName","dataReps","path","generateStateValueProp","split","i","l","t","mkUntrackedValue","o","transformPathStringToObj","splitStatePathPart","slice","shallowEqual","isNum","isNaN","saveNewState","$$state","spec","JSON","stringify","existingStates","specKey","statesInstanceBySpec","create$StateProxy","handlers","getNextKeyToSpecMap","currPath","values","specsByKey","pathObj","reduce","agg","nextKey","rec","nextKeyToSpecs","getSpecForProperty","getNextPath","Proxy","deleteProperty","target","prefixPath","specKeysToUpdate","deleteState","add","onChangeProp","stateValues","Reflect","receiver","nextPath","unsubscriptionsByState","f","getIndexes","indexes","initializeStateValue","initialStatePath","initialSpec","initialStateKey","stateAccess","valueProp","isRepeated","initFunc","unsubscribe","subscribeKey","untrackedInitialValue","initStateValues","useDollarState","specs","useRef","createValtioProxy","some","part","registrationsQueue","untrackedValue","initVal","_p","registerInitFunc","pathStr","deepEqual","resetSpecs","newInit","useSnapshot","sync","useCanvasDollarState","init"],"mappings":"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"}