declare type InitFunc<T> = ($props: Record<string, any>, $state: $State) => T;
export interface $State {
    [key: string]: any;
    registerInitFunc?: (path: string, f: InitFunc<any>) => any;
}
export interface $StateSpec<T> {
    path: string;
    initFunc?: InitFunc<T>;
    initVal?: T;
    type: "private" | "readonly" | "writable";
    valueProp?: string;
    onChangeProp?: string;
}
declare function useVanillaDollarState(_specs: $StateSpec<any>[], props: Record<string, any>): $State;
export default useVanillaDollarState;
