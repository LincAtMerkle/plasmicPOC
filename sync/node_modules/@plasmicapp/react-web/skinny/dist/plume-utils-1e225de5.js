import * as React from 'react';
import { m as mapValues, g as groupBy } from './common-98719219.js';

let PLUME_STRICT_MODE = true;
function mergeVariantToggles(...toggles) {
    const definedToggles = toggles.filter((x) => !!x.def);
    const grouped = groupBy(definedToggles, ({ def }) => def.group);
    return mapValues(grouped, (subToggles) => {
        return Object.fromEntries(subToggles.map(({ def, active }) => [def.variant, !!active]));
    });
}
function noOutline() {
    return { outline: "none" };
}
function getPlumeType(child) {
    var _a;
    if (!React.isValidElement(child)) {
        return undefined;
    }
    const childType = child.type;
    return (childType.__plumeType || ((_a = childType.getPlumeType) === null || _a === void 0 ? void 0 : _a.call(childType, child.props)));
}

export { PLUME_STRICT_MODE as P, getPlumeType as g, mergeVariantToggles as m, noOutline as n };
//# sourceMappingURL=plume-utils-1e225de5.js.map
