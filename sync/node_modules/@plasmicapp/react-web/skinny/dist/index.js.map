{"version":3,"file":"index.js","sources":["../../src/render/Stack.tsx","../../src/render/elements.ts","../../src/render/global-variants.ts","../../src/render/PlasmicIcon.tsx","../../src/render/PlasmicLink.tsx","../../src/render/PlasmicSlot.tsx","../../src/render/screen-variants.ts","../../src/render/triggers.ts","../../src/index-common.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { createElementWithChildren } from \"../react-utils\";\nimport { wrapFlexContainerChildren } from \"./elements\";\n\nfunction renderStack<T extends keyof JSX.IntrinsicElements>(\n  as: T,\n  props: React.ComponentProps<T>,\n  hasGap: boolean | undefined,\n  ref: React.Ref<any>\n) {\n  const { children, ...rest } = props;\n  const wrappedChildren = wrapFlexContainerChildren(children, hasGap ?? false);\n  return createElementWithChildren(as, { ref, ...rest }, wrappedChildren);\n}\n\nfunction FlexStack_<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>,\n  outerRef: React.Ref<any>\n) {\n  const { as, hasGap, ...rest } = props;\n  return renderStack(\n    as ?? \"div\",\n    rest as React.ComponentProps<T>,\n    hasGap,\n    outerRef\n  );\n}\n\nconst FlexStack = React.forwardRef(FlexStack_) as <\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>\n) => React.ReactElement;\n\nconst makeStackImpl = <T extends keyof JSX.IntrinsicElements>(as: T) => {\n  return React.forwardRef(\n    (\n      props: React.ComponentProps<T> & { hasGap?: boolean },\n      ref: React.Ref<any>\n    ) => {\n      const { hasGap, ...rest } = props;\n      return renderStack(as, rest as React.ComponentProps<T>, hasGap, ref);\n    }\n  ) as React.FC<React.ComponentProps<T> & { hasGap?: boolean }>;\n};\n\nexport const Stack = Object.assign(FlexStack, {\n  div: makeStackImpl(\"div\"),\n  a: makeStackImpl(\"a\"),\n  button: makeStackImpl(\"button\"),\n  h1: makeStackImpl(\"h1\"),\n  h2: makeStackImpl(\"h2\"),\n  h3: makeStackImpl(\"h3\"),\n  h4: makeStackImpl(\"h4\"),\n  h5: makeStackImpl(\"h5\"),\n  h6: makeStackImpl(\"h6\"),\n  label: makeStackImpl(\"label\"),\n  form: makeStackImpl(\"form\"),\n  section: makeStackImpl(\"section\"),\n  head: makeStackImpl(\"head\"),\n  main: makeStackImpl(\"main\"),\n  nav: makeStackImpl(\"nav\"),\n});\n","import get from \"dlv\";\nimport * as React from \"react\";\nimport { chainSingleArgFuncs, isSubset, notNil, omit, pick } from \"../common\";\nimport {\n  createElementWithChildren,\n  ensureNotArray,\n  isReactNode,\n  mergeProps,\n  mergePropVals,\n  NONE,\n} from \"../react-utils\";\nimport { $State } from \"../states/valtio\";\nimport { Stack } from \"./Stack\";\n\ninterface Variants {\n  [vg: string]: any;\n}\n\nexport type MultiChoiceArg<M extends string> = M | M[] | { [v in M]?: boolean };\nexport type SingleChoiceArg<M extends string> = M;\nexport type SingleBooleanChoiceArg<M extends string> = M | boolean;\n\ninterface OverrideTwiddle {\n  wrapChildren?: (children: React.ReactNode) => React.ReactNode;\n  wrap?: (node: React.ReactNode) => React.ReactNode;\n}\n\nexport type DefaultOverride<C extends React.ElementType> = {\n  type: \"default\";\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type AsOverride<C extends React.ElementType> = {\n  type: \"as\";\n  as: C;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type RenderOverride<C extends React.ElementType> = {\n  type: \"render\";\n  render: (props: React.ComponentProps<C>, Comp: C) => React.ReactNode;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type Override<DefaultElementType extends React.ElementType> =\n  | DefaultOverride<DefaultElementType>\n  | AsOverride<any>\n  | RenderOverride<DefaultElementType>;\n\nexport type Overrides = Record<string, Flex<any>>;\nexport type Args = Record<string, any>;\n\n// Flex provides a more \"flexible\" way to specify bindings.\nexport type Flex<DefaultElementType extends React.ElementType> =\n  // Fully-specified bindings\n  | (Omit<DefaultOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n      render?: never;\n    })\n  | Omit<AsOverride<any>, \"type\">\n  | (Omit<RenderOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n    })\n\n  // Valid ReactNode, used as children.\n  // Note: We use React.ReactChild instead of React.ReactNode because we don't want to include\n  // React.ReactFragment, which includes {}, which would allow any object to be passed in,\n  // defeating any attempt to type-check!\n  | React.ReactChild\n\n  // Ignored\n  | null\n  | undefined\n\n  // dict of props for the DefaultElementType\n  | (Partial<React.ComponentProps<DefaultElementType>> & {\n      wrap?: never;\n      wrapChildren?: never;\n      props?: never;\n      as?: never;\n      render?: never;\n    })\n\n  // render function taking in dict of props for the DefaultElementType\n  | ((props: React.ComponentProps<DefaultElementType>) => React.ReactNode);\n\nexport function hasVariant<V extends Variants>(\n  variants: V | undefined,\n  groupName: keyof V,\n  variant: string\n) {\n  if (variants == null) {\n    return false;\n  }\n  const groupVariants = variants[groupName];\n  if (groupVariants == null) {\n    return false;\n  } else if (groupVariants === true) {\n    return variant === groupName;\n  } else if (groupVariants === false) {\n    return false;\n  } else if (Array.isArray(groupVariants)) {\n    return groupVariants.includes(variant);\n  } else if (typeof groupVariants === \"string\") {\n    return groupVariants === variant;\n  } else {\n    return (\n      groupVariants[variant] !== undefined && groupVariants[variant] !== false\n    );\n  }\n}\n\nexport function wrapFlexContainerChildren(\n  children: React.ReactNode,\n  hasGap: boolean\n) {\n  // We need to always wrap the children, even if there are no gaps, because\n  // otherwise if we toggle between with and without gap, React reconciliation\n  // will blow away the children tree and all state if we switch from having\n  // a wrapper and not.\n  const className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\n  if (!children) {\n    return null;\n  } else if (Array.isArray(children)) {\n    return React.createElement(\"div\", { className }, ...children);\n  } else {\n    return React.createElement(\"div\", { className }, children);\n  }\n}\n\nfunction createPlasmicElement<DefaultElementType extends React.ElementType>(\n  override: Flex<DefaultElementType>,\n  defaultRoot: DefaultElementType,\n  defaultProps: Partial<React.ComponentProps<DefaultElementType>>,\n  wrapChildrenInFlex?: boolean\n): React.ReactNode | null {\n  if (!override || Object.keys(override).length === 0) {\n    return createElementWithChildren(\n      defaultRoot,\n      defaultProps,\n      defaultProps.children\n    );\n  }\n  const override2 = deriveOverride(override);\n  const props = mergeOverrideProps(defaultProps, override2.props);\n  if (override2.type === \"render\") {\n    return override2.render(\n      props as React.ComponentProps<DefaultElementType>,\n      defaultRoot\n    );\n  }\n\n  let root = defaultRoot;\n  if (override2.type === \"as\" && override2.as) {\n    if (defaultRoot === (Stack as React.ElementType)) {\n      // If there was an \"as\" override specified, but the default type is\n      // a Stack, then we don't want to switch to using \"as\" as the root,\n      // because then we'd lose the flex wrapper that Stack provides.\n      // Instead, we specify the \"as\" as the \"as\" prop to Stack.\n      props.as = override2.as;\n    } else {\n      root = override2.as;\n    }\n  }\n\n  let children = props.children;\n\n  if (override2.wrapChildren) {\n    children = override2.wrapChildren(ensureNotArray(children));\n  }\n\n  if (wrapChildrenInFlex) {\n    // For legacy, we still support data-plasmic-wrap-flex-children\n    children = wrapFlexContainerChildren(children, true);\n  }\n\n  let result = createElementWithChildren(root, props, children);\n\n  if (override2.wrap) {\n    result = override2.wrap(result) as React.ReactElement;\n  }\n\n  return result;\n}\n\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\n// for more info.\nconst seenElements = new Map<string, React.ReactNode>();\nexport function createPlasmicElementProxy<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  // We use seenElements to keep track of elements that has been rendered by\n  // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\n  // is invoked from the leaf to the root as the last call.  So we can store\n  // all the elements we've created until we encounter the leaf, at which point\n  // we will clear this map.  We are guaranteed that this map will only contain\n  // elements from one Plasmic* component at a time, because we're just creating\n  // elements and not \"rendering\" at this point; even if this JSX tree references\n  // other Plasmic* elements, we'll just create an element referencing that component,\n  // rather than following into the content of that component.\n  //\n  // TODO: is this ConcurrentMode friendly?\n\n  if (props == null) {\n    props = {};\n  }\n\n  const name = props[\"data-plasmic-name\"];\n  const isRoot = props[\"data-plasmic-root\"];\n  const forNodeName = props[\"data-plasmic-for-node\"];\n\n  delete props[\"data-plasmic-name\"];\n  delete props[\"data-plasmic-root\"];\n  delete props[\"data-plasmic-for-node\"];\n\n  const element = createPlasmicElementFromJsx(\n    defaultElement,\n    props,\n    ...children\n  );\n  if (name) {\n    seenElements.set(name, element);\n  }\n\n  if (isRoot) {\n    // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\n    // then return that node instead\n    const forNode = forNodeName\n      ? seenElements.get(forNodeName) ?? null\n      : element;\n\n    // Clear out the seenElements map, as we're done rendering this Plasmic* component.\n    seenElements.clear();\n    return forNode;\n  }\n  return element;\n}\n\nfunction createPlasmicElementFromJsx<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  const override = props[\"data-plasmic-override\"];\n  const wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\n  const triggerProps = (props[\"data-plasmic-trigger-props\"] ??\n    []) as React.HTMLAttributes<HTMLElement>[];\n  delete props[\"data-plasmic-override\"];\n  delete props[\"data-plasmic-wrap-flex-child\"];\n  delete props[\"data-plasmic-trigger-props\"];\n  return createPlasmicElement(\n    override,\n    defaultElement,\n    mergeProps(\n      props,\n      children.length === 0\n        ? {}\n        : { children: children.length === 1 ? children[0] : children },\n      ...triggerProps\n    ) as any,\n    wrapFlexChild\n  );\n}\n\nexport function makeFragment(...children: React.ReactNode[]) {\n  return React.createElement(React.Fragment, {}, ...children);\n}\n\nexport const UNSET = Symbol(\"UNSET\");\n\nfunction mergeOverrideProps(\n  defaults: Record<string, any>,\n  overrides?: Record<string, any>\n): Record<string, any> {\n  if (!overrides) {\n    return defaults;\n  }\n\n  const result = { ...defaults };\n\n  for (const key of Object.keys(overrides)) {\n    const defaultVal = defaults[key];\n    let overrideVal = overrides[key];\n    if (overrideVal === UNSET) {\n      delete result[key];\n    } else {\n      // We use the NONE sentinel if the overrideVal is nil, and is not one of the\n      // props that we merge by default -- which are className, style, and\n      // event handlers.  This means for all other \"normal\" props -- like children,\n      // title, etc -- a nil value will unset the default.\n      if (\n        overrideVal == null &&\n        key !== \"className\" &&\n        key !== \"style\" &&\n        !(key.startsWith(\"on\") && typeof defaultVal === \"function\")\n      ) {\n        overrideVal = NONE;\n      }\n      result[key] = mergePropVals(key, defaultVal, overrideVal);\n    }\n  }\n\n  return result;\n}\n\nexport function wrapWithClassName(element: React.ReactNode, className: string) {\n  const key = React.isValidElement(element)\n    ? element.key || undefined\n    : undefined;\n  return React.createElement(\n    \"div\",\n    {\n      key,\n      className,\n      style: {\n        display: \"grid\",\n      },\n    },\n    element\n  );\n}\n\nfunction deriveOverride<C extends React.ElementType>(x: Flex<C>): Override<C> {\n  if (!x) {\n    // undefined Binding is an empty Binding\n    return {\n      type: \"default\",\n      props: {} as any,\n    };\n  } else if (isReactNode(x)) {\n    // If ReactNode, then assume this is the children\n    return {\n      type: \"default\",\n      props: {\n        children: x,\n      } as any,\n    };\n  } else if (typeof x === \"object\") {\n    // If any of the overrideKeys is a key of this object, then assume\n    // this is a full Override\n    if (\"as\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"as\",\n      } as any;\n    } else if (\"render\" in x) {\n      return {\n        ...x,\n        type: \"render\",\n      } as any;\n    } else if (\"props\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"default\",\n      };\n    } else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\n      // Only twiddling functions present, so assume no props overrides\n      // (otherwise we'd assume these were props).\n      return {\n        ...x,\n        props: {},\n        type: \"default\",\n      };\n    }\n\n    // Else, assume this is just a props object.\n    return {\n      type: \"default\",\n      props: x as any,\n    };\n  } else if (typeof x === \"function\") {\n    return {\n      type: \"render\",\n      render: x,\n    };\n  }\n\n  throw new Error(`Unexpected override: ${x}`);\n}\n\nfunction mergeVariants<V extends Variants>(\n  v1: Partial<V> | undefined,\n  v2: Partial<V> | undefined\n): Partial<V> {\n  if (!v1 || !v2) {\n    return v1 || v2 || {};\n  }\n  return { ...v1, ...v2 };\n}\n\nexport function mergeVariantsWithStates(\n  variants: Variants,\n  $state: $State,\n  linkedStates: {\n    variantGroup: string;\n    statePath: (string | number)[];\n  }[]\n): Variants {\n  return {\n    ...variants,\n    ...Object.fromEntries(\n      linkedStates.map(({ variantGroup, statePath }) => [\n        variantGroup,\n        get($state, statePath),\n      ])\n    ),\n  };\n}\n\nfunction mergeArgs<A extends Args>(\n  a1: Partial<A> | undefined,\n  a2: Partial<A> | undefined\n): Partial<A> {\n  if (!a1 || !a2) {\n    return a1 || a2 || {};\n  }\n  return { ...a1, ...a2 };\n}\n\nfunction mergeFlexOverrides<O extends Overrides>(\n  o1: Partial<O>,\n  o2: Partial<O> | undefined\n): Partial<O> {\n  if (!o2) {\n    return o1;\n  }\n  const keys = Array.from(new Set([...Object.keys(o1), ...Object.keys(o2)]));\n  const merged: Record<string, any> = {};\n  for (const key of keys) {\n    merged[key] = mergeFlexOverride(o1[key], o2[key]);\n  }\n  return merged as Partial<O>;\n}\n\nfunction mergeFlexOverride<C extends React.ElementType<any>>(\n  fo1: Flex<C> | undefined,\n  fo2: Flex<C> | undefined\n): Flex<C> | undefined {\n  if (!fo1) {\n    return fo2;\n  }\n  if (!fo2) {\n    return fo1;\n  }\n\n  const o1 = deriveOverride(fo1);\n  const o2 = deriveOverride(fo2);\n  const wrap = chainSingleArgFuncs(...[o1.wrap, o2.wrap].filter(notNil));\n  const wrapChildren = chainSingleArgFuncs(\n    ...[o1.wrapChildren, o2.wrapChildren].filter(notNil)\n  );\n\n  // \"render\" type always takes precedence, but we still merge the props\n  const props = mergeOverrideProps(o1.props ?? {}, o2.props) as Partial<\n    React.ComponentProps<C>\n  >;\n  if (o2.type === \"render\") {\n    return {\n      render: o2.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  if (o1.type === \"render\") {\n    return {\n      render: o1.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  // \"as\" will take precedence\n  const as =\n    (o2.type === \"as\" ? o2.as : undefined) ??\n    (o1.type === \"as\" ? o1.as : undefined);\n\n  return {\n    props,\n    wrap,\n    wrapChildren,\n    ...(as ? { as } : {}),\n  };\n}\n\nexport function deriveRenderOpts(\n  props: Record<string, any>,\n  config: {\n    name: string;\n    descendantNames: string[];\n    internalVariantPropNames: string[];\n    internalArgPropNames: string[];\n  }\n) {\n  const {\n    name,\n    descendantNames,\n    internalVariantPropNames,\n    internalArgPropNames,\n  } = config;\n  const reservedPropNames = [\"variants\", \"args\", \"overrides\"];\n  const variants = mergeVariants(\n    omit(pick(props, ...internalVariantPropNames), ...reservedPropNames),\n    props.variants\n  );\n  const args = mergeArgs(\n    omit(pick(props, ...internalArgPropNames), ...reservedPropNames),\n    props.args\n  );\n  let overrides = mergeFlexOverrides(\n    omit(\n      pick(props, ...descendantNames),\n      ...internalArgPropNames,\n      ...internalVariantPropNames,\n      ...reservedPropNames\n    ),\n    props.overrides\n  );\n\n  const leftoverProps = omit(\n    props,\n    \"variants\",\n    \"args\",\n    \"overrides\",\n    ...descendantNames,\n    ...internalVariantPropNames,\n    ...internalArgPropNames\n  ) as Partial<React.ComponentProps<\"button\">>;\n\n  if (Object.keys(leftoverProps).length > 0) {\n    overrides = mergeFlexOverrides(overrides, {\n      [name]: {\n        props: leftoverProps,\n      },\n    });\n  }\n  return { variants, args, overrides };\n}\n","const isDefaultValue = (val: string) => val === \"PLEASE_RENDER_INSIDE_PROVIDER\";\nconst seenDefaultVariants: Record<string, boolean> = {};\nexport function ensureGlobalVariants<T extends Record<string, any>>(\n  globalVariantValues: T\n) {\n  Object.entries(globalVariantValues)\n    .filter(([_, value]) => isDefaultValue(value))\n    .forEach(([key, _]) => {\n      (globalVariantValues as any)[key] = undefined;\n\n      if (!seenDefaultVariants[key] && process.env.NODE_ENV === \"development\") {\n        seenDefaultVariants[key] = true;\n        const providerName = `${key[0].toUpperCase()}${key.substring(\n          1\n        )}Context.Provider`;\n        console.warn(\n          `Plasmic context value for global variant \"${key}\" was not provided; please use ${providerName} at the root of your React app. Learn More: https://www.plasmic.app/learn/other-assets/#global-variants`\n        );\n      }\n    });\n  return globalVariantValues;\n}\n","import * as React from \"react\";\n\nexport function PlasmicIcon(\n  props: React.ComponentProps<\"svg\"> & {\n    PlasmicIconType: React.ComponentType;\n  }\n) {\n  const { PlasmicIconType, ...rest } = props;\n  return <PlasmicIconType {...rest} />;\n}\n","import React from \"react\";\nimport { omit, pick } from \"../common\";\n\nexport const PlasmicLink = React.forwardRef(function PlasmicLink(\n  props: any,\n  ref: React.Ref<any>\n) {\n  // props.href is required for nextjs; if no props.href,\n  // then we just render the default anchor element\n  if (props.platform === \"nextjs\" && props.href) {\n    const nextjsProps = [\n      \"href\",\n      \"replace\",\n      \"scroll\",\n      \"shallow\",\n      \"passHref\",\n      \"prefetch\",\n      \"locale\",\n    ];\n\n    return React.createElement(\n      props.component,\n      pick(props, ...nextjsProps),\n      <a {...omit(props, \"component\", \"platform\", ...nextjsProps)} ref={ref} />\n    );\n  }\n\n  if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\n    return React.createElement(props.component, {\n      ...omit(props, \"component\", \"platform\", \"href\"),\n      ...{ to: props.href, ref },\n    });\n  }\n\n  return <a {...omit(props, \"component\", \"platform\")} ref={ref} />;\n});\n\nfunction isInternalHref(href: string): boolean {\n  return /^\\/(?!\\/)/.test(href);\n}\n","import * as React from \"react\";\nimport { mergeProps } from \"../react-utils\";\nimport { Trans } from \"./translation\";\n\nexport function PlasmicSlot<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: React.ComponentProps<T> & {\n    as?: T;\n    defaultContents?: React.ReactNode;\n    value?: React.ReactNode;\n  }\n) {\n  return renderPlasmicSlot(props);\n}\n\nexport function renderPlasmicSlot<\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(opts: {\n  as?: T;\n  defaultContents?: React.ReactNode;\n  value?: React.ReactNode;\n}) {\n  const { as, defaultContents, value, ...rest } = opts;\n\n  let content = value === undefined ? defaultContents : value;\n  if (!content || (Array.isArray(content) && content.length === 0)) {\n    return null;\n  }\n\n  // If the content is a raw string, then we need to wrap the raw string\n  // into an element, in case the slot is inside a flex-gap\n  // container (you cannot apply margin to just a text node).\n  const maybeString = maybeAsString(content);\n  if (maybeString) {\n    content = <div className=\"__wab_slot-string-wrapper\">{maybeString}</div>;\n  }\n\n  const nonEmptyProps = Object.keys(rest).filter((p) => !!(rest as any)[p]);\n  if (nonEmptyProps.length === 0) {\n    // No attrs to apply to the slot (which means the slot is unstyled), then\n    // just render the content directly; no need for style wrapper.\n    return <>{content}</>;\n  }\n\n  return React.createElement(\n    as || \"div\",\n    mergeProps({ className: \"__wab_slot\" }, rest),\n    content\n  );\n}\n\nfunction maybeAsString(node: React.ReactNode): string | undefined {\n  // Unwrap fragments\n  if (\n    React.isValidElement(node) &&\n    // Fragment and Trans don't render DOM elements\n    (node.type === React.Fragment || node.type === Trans)\n  ) {\n    return maybeAsString(node.props.children);\n  }\n\n  if (typeof node === \"string\") {\n    return node;\n  }\n\n  if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\n    return node[0];\n  }\n\n  return undefined;\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isBrowser, useIsomorphicLayoutEffect } from \"../react-utils\";\n\ntype Queries = { [name: string]: string };\n\nconst listeners: Array<() => void> = [];\nconst queries: Queries = {};\n\nfunction matchScreenVariants() {\n  if (!isBrowser) {\n    return [];\n  }\n  return Object.entries(queries)\n    .filter(([, query]) => window.matchMedia(query).matches)\n    .map(([name]) => name);\n}\n\n// undefined if screen variants have never been calculated\nlet curScreenVariants: string[] | undefined = undefined;\n\nfunction recalculateScreenVariants() {\n  const screenVariant = matchScreenVariants();\n  if (\n    !curScreenVariants ||\n    screenVariant.join(\"\") !== curScreenVariants.join(\"\")\n  ) {\n    curScreenVariants = screenVariant;\n    ReactDOM.unstable_batchedUpdates(() =>\n      listeners.forEach((listener) => listener())\n    );\n  }\n}\n\nfunction ensureInitCurScreenVariants() {\n  // Initializes curScreenVariants if it hadn't been before. Note that this must\n  // be called from within an effect.\n  if (curScreenVariants === undefined) {\n    curScreenVariants = matchScreenVariants();\n  }\n}\n\nif (isBrowser) {\n  window.addEventListener(\"resize\", recalculateScreenVariants);\n}\n\nexport function createUseScreenVariants(\n  isMulti: boolean,\n  screenQueries: Queries\n) {\n  Object.assign(queries, screenQueries);\n  curScreenVariants = undefined;\n\n  return function () {\n    // It is important that upon first render, we return [] or undefined, because\n    // that is what SSR will use, and the client must match.  In an effect (which\n    // only happens on the client), we then actually ask for the real screen variant\n    // and, if different from [] or undefined, forces a re-render.\n\n    const [, updateState] = React.useState<{}>();\n    const lastScreenVariantsRef = React.useRef<string[]>(\n      curScreenVariants || []\n    );\n\n    // We do useLayoutEffect instead of useEffect to immediately\n    // register our forceUpdate. This ensures that if there was\n    // a window resize event between render and effects, that the\n    // listener will be registered in time\n    useIsomorphicLayoutEffect(() => {\n      const updateIfChanged = () => {\n        if (\n          curScreenVariants &&\n          lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")\n        ) {\n          lastScreenVariantsRef.current = curScreenVariants;\n          // Force update\n          updateState({});\n        }\n      };\n\n      // Listeners are invoked whenever the window is resized\n      listeners.push(updateIfChanged);\n\n      // Initialize the curScreenVariants for the first time.  We don't need\n      // to invoke the listeners here because all components will already\n      // have this effect running and will re-render if the real screen\n      // variant is non-empty.\n      ensureInitCurScreenVariants();\n\n      // Now, if the curScreenVariants differs from what we returned last,\n      // then force a re-render.\n      updateIfChanged();\n      return () => {\n        // Remove our listener on unmount\n        listeners.splice(listeners.indexOf(updateIfChanged), 1);\n      };\n    }, []);\n\n    if (isMulti) {\n      return curScreenVariants || [];\n    } else if (curScreenVariants) {\n      return curScreenVariants[curScreenVariants.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n}\n","import * as React from \"react\";\nimport { useFocusRing as useAriaFocusRing } from \"@react-aria/focus\";\n\nfunction useFocused(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisible(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useFocusedWithin(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisibleWithin(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useHover() {\n  const [isHover, setHover] = React.useState(false);\n  return [\n    isHover,\n    {\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n    },\n  ];\n}\n\nfunction usePressed() {\n  const [isPressed, setPressed] = React.useState(false);\n  return [\n    isPressed,\n    {\n      onMouseDown: () => setPressed(true),\n      onMouseUp: () => setPressed(false),\n    },\n  ];\n}\n\nconst TRIGGER_TO_HOOK = {\n  useHover,\n  useFocused,\n  useFocusVisible,\n  useFocusedWithin,\n  useFocusVisibleWithin,\n  usePressed,\n} as const;\n\ntype TriggerType = keyof typeof TRIGGER_TO_HOOK;\n\ninterface TriggerOpts {\n  isTextInput?: boolean;\n}\n\n/**\n * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,\n * as it's not valid to install variable React hooks!\n */\nexport function useTrigger(trigger: TriggerType, opts: TriggerOpts) {\n  return TRIGGER_TO_HOOK[trigger](opts) as [\n    boolean,\n    React.HTMLAttributes<HTMLElement>\n  ];\n}\n","// Utilities used by generated code\nimport _classNames from \"classnames\";\nexport const classNames = _classNames;\nexport { omit, pick } from \"./common\";\nexport { HTMLElementRefOf, StrictProps } from \"./react-utils\";\nexport {\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  Flex,\n  hasVariant,\n  makeFragment,\n  mergeVariantsWithStates,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  wrapWithClassName,\n} from \"./render/elements\";\nexport { ensureGlobalVariants } from \"./render/global-variants\";\nexport { PlasmicHead, plasmicHeadMeta } from \"./render/PlasmicHead\";\nexport { PlasmicIcon } from \"./render/PlasmicIcon\";\nexport { PlasmicImg } from \"./render/PlasmicImg\";\nexport { PlasmicLink } from \"./render/PlasmicLink\";\nexport { PlasmicSlot, renderPlasmicSlot } from \"./render/PlasmicSlot\";\nexport { createUseScreenVariants } from \"./render/screen-variants\";\nexport { PlasmicRootProvider, useIsSSR } from \"./render/ssr\";\nexport { Stack } from \"./render/Stack\";\nexport { genTranslatableString, Trans } from \"./render/translation\";\nexport { useTrigger } from \"./render/triggers\";\n"],"names":["React","ReactDOM","useAriaFocusRing","_classNames"],"mappings":"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"}