{"version":3,"file":"common-98719219.js","sources":["../../src/common.ts"],"sourcesContent":["export function notNil<T>(x: T | undefined | null): x is T {\n  return x != null;\n}\n\nexport function pick<T>(\n  obj: T,\n  ...keys: (string | number | symbol)[]\n): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: any = {};\n  for (const key of keys) {\n    if (key in obj) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function pickBy<T>(\n  obj: T,\n  func: (key: string, val: any) => boolean\n): Partial<T> {\n  const res: any = {};\n  for (const [key, val] of Object.entries(obj)) {\n    if (func(key, val)) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function omit<T>(obj: T, ...keys: (keyof T)[]): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: Partial<T> = {};\n  for (const key of Object.keys(obj) as (keyof T)[]) {\n    if (!keys.includes(key)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\nexport function isSubset<T>(a1: T[], a2: T[]) {\n  return a1.every((x) => a2.includes(x));\n}\n\nexport function chainSingleArgFuncs<A>(...funcs: ((arg: A) => A)[]) {\n  if (funcs.length === 0) {\n    return undefined;\n  }\n  return (arg: A) => {\n    let res: A = arg;\n    for (const func of funcs) {\n      res = func(res);\n    }\n    return res;\n  };\n}\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nexport function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\nexport function groupBy<T>(\n  collection: T[],\n  keyFunc: (x: T) => string\n): Record<string, T[]> {\n  const result: Record<string, T[]> = {};\n  for (const obj of collection) {\n    const key = keyFunc(obj);\n    if (key in result) {\n      result[key].push(obj);\n    } else {\n      result[key] = [obj];\n    }\n  }\n  return result;\n}\n\nexport function mapValues<V, V2>(\n  obj: Record<string, V>,\n  mapper: (value: V) => V2\n): Record<string, V2> {\n  const result: Record<string, V2> = {};\n  for (const key in obj) {\n    result[key] = mapper(obj[key]);\n  }\n  return result;\n}\n"],"names":[],"mappings":"SAAgB,MAAM,CAAI,CAAuB;IAC/C,OAAO,CAAC,IAAI,IAAI,CAAC;AACnB,CAAC;SAEe,IAAI,CAClB,GAAM,EACN,GAAG,IAAkC;IAErC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACjC,OAAO,GAAG,CAAC;KACZ;IACD,MAAM,GAAG,GAAQ,EAAE,CAAC;IACpB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,IAAI,GAAG,IAAI,GAAG,EAAE;YACd,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAc,CAAC,CAAC;SAChC;KACF;IACD,OAAO,GAAiB,CAAC;AAC3B,CAAC;SAee,IAAI,CAAI,GAAM,EAAE,GAAG,IAAiB;IAClD,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACjC,OAAO,GAAG,CAAC;KACZ;IACD,MAAM,GAAG,GAAe,EAAE,CAAC;IAC3B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAgB,EAAE;QACjD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACvB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACrB;KACF;IACD,OAAO,GAAG,CAAC;AACb,CAAC;SAEe,QAAQ,CAAI,EAAO,EAAE,EAAO;IAC1C,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;SAEe,mBAAmB,CAAI,GAAG,KAAwB;IAChE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,CAAC,GAAM;QACZ,IAAI,GAAG,GAAM,GAAG,CAAC;QACjB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;SACjB;QACD,OAAO,GAAG,CAAC;KACZ,CAAC;AACJ,CAAC;SAWe,QAAQ,CAAC,CAAM;IAC7B,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC;AAC/B,CAAC;SAEe,OAAO,CACrB,UAAe,EACf,OAAyB;IAEzB,MAAM,MAAM,GAAwB,EAAE,CAAC;IACvC,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;QAC5B,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,GAAG,IAAI,MAAM,EAAE;YACjB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;aAAM;YACL,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACrB;KACF;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;SAEe,SAAS,CACvB,GAAsB,EACtB,MAAwB;IAExB,MAAM,MAAM,GAAuB,EAAE,CAAC;IACtC,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;QACrB,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAChC;IACD,OAAO,MAAM,CAAC;AAChB;;;;"}