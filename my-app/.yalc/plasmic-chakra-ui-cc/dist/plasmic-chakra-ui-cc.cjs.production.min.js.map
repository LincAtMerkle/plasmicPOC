{"version":3,"file":"plasmic-chakra-ui-cc.cjs.production.min.js","sources":["../src/registerButton.ts","../src/index.tsx"],"sourcesContent":["import registerComponent, {\n    ComponentMeta,\n  } from \"@plasmicapp/host/registerComponent\";\n  import {\n    // ButtonGroup,\n    // ButtonGroupProps,\n    Button,\n    ButtonProps,\n  } from \"@chakra-ui/react\";\n  import { Registerable } from \"./registerable\";\n  \n//   export const buttonGroupMeta: ComponentMeta<ButtonGroupProps> = {\n//     name: \"ButtonGroup\",\n//     importPath: \"@chakra-ui/react\",\n//     props: {\n//       colorScheme: {\n//         type: \"choice\",\n//         options: [\n//           \"whiteAlpha\",\n//           \"blackAlpha\",\n//           \"gray\",\n//           \"red\",\n//           \"orange\",\n//           \"yellow\",\n//           \"green\",\n//           \"teal\",\n//           \"blue\",\n//           \"cyan\",\n//           \"purple\",\n//           \"pink\",\n//           \"linkedin\",\n//           \"facebook\",\n//           \"messenger\",\n//           \"whatsapp\",\n//           \"twitter\",\n//           \"telegram\",\n//         ],\n//       },\n//       size: {\n//         type: \"choice\",\n//         options: [\"xl\", \"sm\", \"md\", \"lg\"],\n//         defaultValue: \"md\",\n//       },\n//       isAttached: {\n//         type: \"boolean\",\n//         defaultValue: false,\n//       },\n//       isDisabled: {\n//         type: \"boolean\",\n//         defaultValue: false,\n//       },\n//       spacing: {\n//         type: \"string\",\n//         defaultValue: \"0.5rem\",\n//       },\n//       children: {\n//         type: \"slot\",\n//         defaultValue: [\n//           {\n//             type: \"component\",\n//             name: \"Button\",\n//             props: {\n//               children: {\n//                 type: \"text\",\n//                 value: \"Button 1\",\n//               },\n//             },\n//           },\n//           {\n//             type: \"component\",\n//             name: \"Button\",\n//             props: {\n//               children: {\n//                 type: \"text\",\n//                 value: \"Button 2\",\n//               },\n//             },\n//           },\n//         ],\n//       },\n//     },\n//   };\n  \n//   export function registerButtonGroup(\n//     loader?: Registerable,\n//     customButtonGroupMeta?: ComponentMeta<ButtonGroupProps>\n//   ) {\n//     const doRegisterComponent: typeof registerComponent = (...args) =>\n//       loader ? loader.registerComponent(...args) : registerComponent(...args);\n//     doRegisterComponent(ButtonGroup, customButtonGroupMeta ?? buttonGroupMeta);\n//   }\n  \n  export const buttonMeta: ComponentMeta<ButtonProps> = {\n    name: \"ChakraButton\",\n    importPath: \"plasmic-chakra-ui-cc\",\n    // parentComponentName: \"ButtonGroup\",\n    props: {\n      size: {\n        type: \"choice\",\n        options: [\"xl\", \"sm\", \"md\", \"lg\"],\n      },\n      variant: {\n        type: \"choice\",\n        options: [\"ghost\", \"outline\", \"solid\", \"link\", \"unstyled\"],\n        defaultValue: \"solid\",\n      },\n      colorScheme: {\n        type: \"choice\",\n        options: [\n          \"whiteAlpha\",\n          \"blackAlpha\",\n          \"gray\",\n          \"#ff00ff\",\n          \"orange\",\n          \"yellow\",\n          \"green\",\n          \"teal\",\n          \"blue\",\n          \"cyan\",\n          \"purple\",\n          \"pink\",\n          \"linkedin\",\n          \"facebook\",\n          \"messenger\",\n          \"whatsapp\",\n          \"twitter\",\n          \"telegram\",\n        ],\n      },\n      iconSpacing: \"number\",\n      isActive: {\n        type: \"boolean\",\n      },\n      isDisabled: {\n        type: \"boolean\",\n      },\n      isLoading: {\n        type: \"boolean\",\n      },\n      children: {\n        type: \"slot\",\n        defaultValue: {\n          type: \"text\",\n          value: \"Button\",\n        },\n      },\n    },\n  };\n  \n  export function registerButton(\n    loader?: Registerable,\n    customButtonMeta?: ComponentMeta<ButtonProps>\n  ) {\n    const doRegisterComponent: typeof registerComponent = (...args) =>\n      loader ? loader.registerComponent(...args) : registerComponent(...args);\n    doRegisterComponent(Button, customButtonMeta ?? buttonMeta);\n  }","import { Registerable } from \"./registerable\";\nimport { registerButton } from \"./registerButton\";\n\nexport function registerAll(loader?: Registerable) {\n  registerButton(loader);\n}"],"names":["buttonMeta","name","importPath","props","size","type","options","variant","defaultValue","colorScheme","iconSpacing","isActive","isDisabled","isLoading","children","value","loader","customButtonMeta","registerComponent","doRegisterComponent","Button","registerButton"],"mappings":"2MA4FeA,EAAyC,CACpDC,KAAM,eACNC,WAAY,uBAEZC,MAAO,CACLC,KAAM,CACJC,KAAM,SACNC,QAAS,CAAC,KAAM,KAAM,KAAM,OAE9BC,QAAS,CACPF,KAAM,SACNC,QAAS,CAAC,QAAS,UAAW,QAAS,OAAQ,YAC/CE,aAAc,SAEhBC,YAAa,CACXJ,KAAM,SACNC,QAAS,CACP,aACA,aACA,OACA,UACA,SACA,SACA,QACA,OACA,OACA,OACA,SACA,OACA,WACA,WACA,YACA,WACA,UACA,aAGJI,YAAa,SACbC,SAAU,CACRN,KAAM,WAERO,WAAY,CACVP,KAAM,WAERQ,UAAW,CACTR,KAAM,WAERS,SAAU,CACRT,KAAM,OACNG,aAAc,CACZH,KAAM,OACNU,MAAO,0CC5IWC,aDmJxBA,EACAC,IAEsD,WACpDD,EAASA,EAAOE,wBAAPF,aAAoCE,0BAC/CC,CAAoBC,SAA4BpB,GCvJlDqB,CAAeL"}